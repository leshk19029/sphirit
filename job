--[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
-- Load UI Library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/leshk19029/sphirit/refs/heads/main/library"))()

-- Create Main Window
local Window = Library:Window({
    Title = "Snow",
    Desc = "Hub",
    Icon = 105059922903197,
    Theme = "Dark",
    Config = {
        Keybind = Enum.KeyCode.LeftControl,
        Size = UDim2.new(0, 500, 0, 400)
    },
    CloseUIButton = {
        Enabled = true,
        Text = "x2zu"
    }
})

-- Speed Boost Module
local SpeedBoostModule = {}
SpeedBoostModule.Enabled = false
SpeedBoostModule.CurrentSpeed = 16
SpeedBoostModule.VelocityConnection = nil
SpeedBoostModule.Player = game:GetService("Players").LocalPlayer

function SpeedBoostModule:Enable()
    local RunService = game:GetService('RunService')
    
    local character = self.Player.Character
    if not character then return end
    
    self:Disable()

    self.VelocityConnection = RunService.Heartbeat:Connect(function()
        if not self.Enabled then return end
        
        character = self.Player.Character
        if not character or not character.Parent then return end
        
        local humanoid = character:FindFirstChild('Humanoid')
        local rootPart = character:FindFirstChild('HumanoidRootPart')
        
        if humanoid and rootPart and humanoid.MoveDirection.Magnitude > 0 then
            local moveDirection = humanoid.MoveDirection
            local velocity = moveDirection * self.CurrentSpeed
            rootPart.Velocity = Vector3.new(velocity.X, rootPart.Velocity.Y, velocity.Z)
        end
    end)
end

function SpeedBoostModule:Disable()
    if self.VelocityConnection then
        self.VelocityConnection:Disconnect()
        self.VelocityConnection = nil
    end
end

function SpeedBoostModule:SetSpeed(speed)
    self.CurrentSpeed = math.clamp(speed, 1, 45)
end

function SpeedBoostModule:SetEnabled(state)
    self.Enabled = state
    if state then
        self:Enable()
    else
        self:Disable()
    end
end

-- Обработка смены персонажа
SpeedBoostModule.Player.CharacterAdded:Connect(function()
    if SpeedBoostModule.Enabled then
        SpeedBoostModule:Disable()
        SpeedBoostModule:Enable()
    end
end)

SpeedBoostModule.Player.CharacterRemoving:Connect(function()
    SpeedBoostModule:Disable()
end)

-- Anti-Effects Function
local AntiEffectsFunction = function()
    local lighting = game:GetService("Lighting")
    local camera = game:GetService("Workspace").CurrentCamera

    -- Функция для удаления DiscoEffect и настройки эффектов + фиксации FOV
    local function checkForDiscoEffect(child)
        if child.Name == "DiscoEffect" then
            child:Destroy() -- Удаляем DiscoEffect
            
            -- Удаляем Blur (если есть)
            local blur = lighting:FindFirstChild("Blur")
            if blur then
                blur:Destroy()
            end

            -- Включаем ColorCorrection (создаём, если нет)
            local correction = lighting:FindFirstChild("ColorCCorrection") or Instance.new("ColorCCorrection")
            correction.Parent = lighting
            correction.Enabled = true

            -- === Фиксируем FieldOfView = 70 только при обнаружении DiscoEffect ===
            camera.FieldOfView = 70 -- Устанавливаем сразу
            
            -- Настраиваем отслеживание изменений FOV (если вдруг кто-то попытается поменять)
            if not camera:GetPropertyChangedSignal("FieldOfView"):IsConnected() then
                camera:GetPropertyChangedSignal("FieldOfView"):Connect(function()
                    if camera.FieldOfView ~= 70 then
                        camera.FieldOfView = 70 -- Принудительно возвращаем
                    end
                end)
            end
        end
    end

    -- Проверяем существующие объекты (на случай, если DiscoEffect уже есть)
    for _, child in ipairs(lighting:GetChildren()) do
        checkForDiscoEffect(child)
    end

    -- Включаем отслеживание новых объектов
    lighting.ChildAdded:Connect(checkForDiscoEffect)

    local Players = game:GetService("Players")
    local Lighting = game:GetService("Lighting")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local RunService = game:GetService("RunService")

    local localPlayer = Players.LocalPlayer
    local playerScripts = localPlayer.PlayerScripts
    local camera = workspace.CurrentCamera

    -- Получаем оригинальные модули управления
    local PlayerModule = require(playerScripts:WaitForChild("PlayerModule"))
    local controls = PlayerModule:GetControls()
    local CharacterController = require(ReplicatedStorage.Controllers.CharacterController)
    local originalMoveFunction = CharacterController.originalMoveFunction

    -- Функция для восстановления управления и удаления эффектов
    local function restoreControls()
        -- Восстанавливаем оригинальную функцию движения
        if controls and originalMoveFunction then
            controls.moveFunction = originalMoveFunction
        end
        
        -- Восстанавливаем FieldOfView камеры
        if camera then
            camera.FieldOfView = 70
        end
    end

    -- Функция для проверки и удаления эффектов
    local function checkEffects()
        -- Удаляем эффекты, если они есть
        for _, effectName in ipairs({"BeeBlur", "ColorCorrection"}) do
            local effect = Lighting:FindFirstChild(effectName)
            if effect then
                effect:Destroy()
            end
        end
    end

    -- Слушатель для новых эффектов в Lighting
    Lighting.ChildAdded:Connect(function(child)
        if child.Name == "BeeBlur" or child.Name == "ColorCorrection" then
            child:Destroy()
            restoreControls() -- Дополнительно восстанавливаем управление
        end
    end)

    -- Постоянная проверка (на случай, если ChildAdded не сработает)
    local connection
    connection = RunService.Heartbeat:Connect(function()
        checkEffects()
        restoreControls() -- Постоянно восстанавливаем управление
    end)

    -- Остановка скрипта при выходе (опционально)
    localPlayer.CharacterRemoving:Connect(function()
        if connection then
            connection:Disconnect()
        end
    end)

    -- Первоначальная проверка
    checkEffects()
    restoreControls()
end

-- Main Tab
local Tab = Window:Tab({Title = "Main", Icon = "star"}) do
    -- Speed Boost Section
    Tab:Section({Title = "Speed Boost"})

    -- Toggle for Speed Boost
    Tab:Toggle({
        Title = "Enable Speed Boost",
        Desc = "Toggle to enable or disable speed boost",
        Value = false,
        Callback = function(v)
            SpeedBoostModule:SetEnabled(v)
            print("Speed Boost:", v)
        end
    })

    -- Slider for Speed
    Tab:Slider({
        Title = "Speed Value",
        Min = 1,
        Max = 45,
        Rounding = 0,
        Value = 16,
        Callback = function(val)
            SpeedBoostModule:SetSpeed(val)
            print("Speed set to:", val)
        end
    })

    -- Anti-Effects Section
    Tab:Section({Title = "Anti-Effects"})
    
    Tab:Button({
        Title = "Enable Anti-Effects",
        Desc = "Remove visual effects and fix camera FOV",
        Callback = function()
            AntiEffectsFunction()
            Window:Notify({
                Title = "Anti-Effects",
                Desc = "Anti-effects function activated!",
                Time = 3
            })
        end
    })

    -- Info Section
    Tab:Section({Title = "Info"})
    
    Tab:Button({
        Title = "Get Current Speed",
        Desc = "Click to see current speed value",
        Callback = function()
            Window:Notify({
                Title = "Current Speed",
                Desc = "Speed: " .. tostring(SpeedBoostModule.CurrentSpeed),
                Time = 3
            })
        end
    })
end

-- Final Notification
Window:Notify({
    Title = "Snow Hub Loaded",
    Desc = "All modules have been successfully loaded!",
    Time = 4
})
