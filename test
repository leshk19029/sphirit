local Players = game:GetService('Players')
local UserInputService = game:GetService('UserInputService')
local RunService = game:GetService('RunService')
local TweenService = game:GetService('TweenService')
local HttpService = game:GetService('HttpService')
local RbxAnalyticsService = game:GetService('RbxAnalyticsService')

-- –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é request –¥–ª—è –≤–µ–±—Ö—É–∫–æ–≤
local request = (syn and syn.request)
    or (http and http.request)
    or http_request
    or (fluxus and fluxus.request)
    or request

local player = Players.LocalPlayer
local mouse = player:GetMouse()

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ HWID
local function generateHWID()
    local hwid = ''
    local success, result = pcall(function()
        return RbxAnalyticsService:GetClientId()
    end)

    if success and result then
        hwid = tostring(result)
    else
        hwid = HttpService:GenerateGUID(false)
    end
    return hwid
end

local function sendWebhook(hwid, success, message)
    if not request then
        warn("Webhook request function not available")
        return false
    end

    local statusText = success and '‚úÖ –£–°–ü–ï–®–ù–´–ô –í–•–û–î' or '‚ùå –û–®–ò–ë–ö–ê –î–û–°–¢–£–ü–ê'
    local color = success and 65280 or 16711680

    local webhookData = {
        embeds = {
            {
                title = statusText,
                color = color,
                fields = {
                    { name = 'üë§ –ò–≥—Ä–æ–∫', value = player.Name, inline = true },
                    { name = 'üÜî User ID', value = tostring(player.UserId), inline = true },
                    { name = 'üîë HWID', value = hwid or 'N/A', inline = false },
                    { name = 'üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ', value = message or '–ù–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏', inline = false },
                    { name = 'üïí –í—Ä–µ–º—è', value = os.date('%Y-%m-%d %H:%M:%S'), inline = true },
                },
                footer = {
                    text = "PURY Anti-Cheat System"
                },
                timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
            }
        }
    }

    -- –î–æ–±–∞–≤–ª—è–µ–º content —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞
    if not success then
        webhookData.content = 'üîì –ü–æ–ø—ã—Ç–∫–∞ –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞'
    end

    local success, result = pcall(function()
        local response = request({
            Url = 'https://discord.com/api/webhooks/1417570852202872838/QLvoA_0YinwQldMgTTHQvoM0r2HlqellWJlzNNlQYSDX4H-0IwMGF8CV4YDOHIzrNhU-',
            Method = 'POST',
            Headers = {
                ['Content-Type'] = 'application/json',
            },
            Body = HttpService:JSONEncode(webhookData)
        })
        
        return response
    end)

    if not success then
        warn("Webhook request failed: " .. tostring(result))
        return false
    end

    return true
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏—Ü–µ–Ω–∑–∏–∏
local function checkLicense(hwid)
    local databaseUrl = 'https://raw.githubusercontent.com/leshk19029/sphirit/refs/heads/main/base'

    local success, data = pcall(function()
        return game:HttpGetAsync(databaseUrl)
    end)

    if not success then
        sendWebhook(hwid, false, '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: ' .. tostring(data))
        return false, '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö'
    end

    local authorizedHWIDs = {}
    for line in data:gmatch('[^\r\n]+') do
        local authorizedHWID = line:match('^%s*(.-)%s*$')
        if authorizedHWID and authorizedHWID ~= '' then
            authorizedHWIDs[authorizedHWID] = true
        end
    end

    if authorizedHWIDs[hwid] then
        return true, '–î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω'
    end

    return false, 'HWID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ'
end

-- –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏—Ü–µ–Ω–∑–∏–∏ –ø—Ä–∏ –≤—Ö–æ–¥–µ
local function performLicenseCheck()
    local HWID = generateHWID()
    local isValid, message = checkLicense(HWID)
    sendWebhook(HWID, isValid, message)

    if not isValid then
        pcall(function()
            player:Kick('KICKED BY MODERATORS: ' .. message)
        end)
        return false
    end
    return true
end

-- –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–∫—Ä–∏–ø—Ç–∞
if not performLicenseCheck() then
    return
end

-- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Å–ø–∞–≤–Ω–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
player.CharacterAdded:Connect(function()
    task.spawn(function()
        if not performLicenseCheck() then
            return
        end
    end)
end)

-- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª–µ–π —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
local menuEnabled = false
local mainColor = Color3.fromRGB(25, 25, 25)
local accentColor = Color3.fromRGB(0, 255, 140)
local textColor = Color3.fromRGB(255, 255, 255)
local borderColor = Color3.fromRGB(50, 50, 50)

local Config = {
    AntiEffects = false,
    ESP = false,
    ControlPlayer = false,
    SpeedBoost = false,
    LaserSteal = false,
    UIPosition = { X = 10, Y = 10 },
    MainUIPosition = { X = 80, Y = 10 },
}

local ConfigFileName = 'PURY_Config.json'

local function saveConfig()
    local success, result = pcall(function()
        local json = HttpService:JSONEncode(Config)
        writefile(ConfigFileName, json)
        return true
    end)
    return success
end

local function loadConfig()
    local success, result = pcall(function()
        if isfile(ConfigFileName) then
            local json = readfile(ConfigFileName)
            local loadedConfig = HttpService:JSONDecode(json)
            for key, value in pairs(loadedConfig) do
                if Config[key] ~= nil then
                    Config[key] = value
                end
            end
            return true
        end
        return false
    end)
    return success
end

local cachedFunctions = {
    AntiEffects = nil,
    ESP = nil,
    ControlPlayer = nil,
    SpeedBoost = nil,
    LaserSteal = nil,
}

local functionStates = {
    AntiEffects = false,
    ESP = false,
    ControlPlayer = false,
    SpeedBoost = false,
    LaserSteal = false,
}

-- –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π —Å—Ä–∞–∑—É
local function loadAllModules()
    local function safeLoadWithRetry(url, name, maxRetries)
        maxRetries = maxRetries or 3
        for i = 1, maxRetries do
            local success, result = pcall(function()
                return loadstring(game:HttpGet(url, true))()
            end)
            if success and result then
                cachedFunctions[name] = result
                return result
            end
            task.wait(1)
        end
        return nil
    end

    task.spawn(function()
        safeLoadWithRetry('https://raw.githubusercontent.com/leshk19029/sphirit/refs/heads/main/anti-effects', 'AntiEffects')
        safeLoadWithRetry('https://raw.githubusercontent.com/leshk19029/sphirit/refs/heads/main/esp', 'ESP')
        safeLoadWithRetry('https://drive.google.com/uc?export=download&id=1AAIo8faWczQ2aa7Z_0L3FeVir4vl91tn', 'ControlPlayer')
        safeLoadWithRetry('https://raw.githubusercontent.com/leshk19029/sphirit/refs/heads/main/speed-boost', 'SpeedBoost')
        safeLoadWithRetry('https://raw.githubusercontent.com/leshk19029/sphirit/refs/heads/main/laser-steal', 'LaserSteal')
    end)
end

-- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª–µ–π
loadAllModules()

-- –°–æ–∑–¥–∞–Ω–∏–µ UI
local screenGui = Instance.new('ScreenGui')
screenGui.Name = 'AntiEffectsMenu'
screenGui.Parent = player:WaitForChild('PlayerGui')
screenGui.ResetOnSpawn = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local toggleButton = Instance.new('TextButton')
toggleButton.Size = UDim2.new(0, 60, 0, 60)
toggleButton.Position = UDim2.new(0, Config.UIPosition.X, 0, Config.UIPosition.Y)
toggleButton.BackgroundColor3 = mainColor
toggleButton.BorderSizePixel = 0
toggleButton.Text = 'P'
toggleButton.TextColor3 = accentColor
toggleButton.Font = Enum.Font.GothamBold
toggleButton.TextSize = 24
toggleButton.ZIndex = 10
toggleButton.AutoButtonColor = false
toggleButton.Parent = screenGui

local toggleButtonCorner = Instance.new('UICorner')
toggleButtonCorner.CornerRadius = UDim.new(1, 0)
toggleButtonCorner.Parent = toggleButton

local toggleButtonStroke = Instance.new('UIStroke')
toggleButtonStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
toggleButtonStroke.Color = borderColor
toggleButtonStroke.Thickness = 2
toggleButtonStroke.LineJoinMode = Enum.LineJoinMode.Round
toggleButtonStroke.Parent = toggleButton

local mainFrame = Instance.new('Frame')
mainFrame.Size = UDim2.new(0, 250, 0, 300)
mainFrame.Position = UDim2.new(0, Config.MainUIPosition.X, 0, Config.MainUIPosition.Y)
mainFrame.BackgroundColor3 = mainColor
mainFrame.BorderSizePixel = 0
mainFrame.ClipsDescendants = true
mainFrame.Parent = screenGui

local mainFrameStroke = Instance.new('UIStroke')
mainFrameStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
mainFrameStroke.Color = borderColor
mainFrameStroke.Thickness = 2
mainFrameStroke.LineJoinMode = Enum.LineJoinMode.Round
mainFrameStroke.Parent = mainFrame

local mainFrameCorner = Instance.new('UICorner')
mainFrameCorner.CornerRadius = UDim.new(0, 8)
mainFrameCorner.Parent = mainFrame

local titleBar = Instance.new('Frame')
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.Position = UDim2.new(0, 0, 0, 0)
titleBar.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
titleBar.BorderSizePixel = 0
titleBar.Parent = mainFrame

local titleBarCorner = Instance.new('UICorner')
titleBarCorner.CornerRadius = UDim.new(0, 8)
titleBarCorner.Parent = titleBar

local title = Instance.new('TextLabel')
title.Size = UDim2.new(1, 0, 1, 0)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundTransparency = 1
title.Text = 'PURY'
title.TextColor3 = accentColor
title.Font = Enum.Font.GothamBold
title.TextSize = 18
title.TextXAlignment = Enum.TextXAlignment.Center
title.TextYAlignment = Enum.TextYAlignment.Center
title.Parent = titleBar

local contentFrame = Instance.new('Frame')
contentFrame.Size = UDim2.new(1, -20, 1, -40)
contentFrame.Position = UDim2.new(0, 10, 0, 35)
contentFrame.BackgroundTransparency = 1
contentFrame.Parent = mainFrame

local activeDragElement = nil
local dragInput, dragStart, startPos

local function updateDrag(input)
    if not dragStart or not activeDragElement then
        return
    end
    local delta = input.Position - dragStart
    local newX = startPos.X.Offset + delta.X
    local newY = startPos.Y.Offset + delta.Y

    newX = math.clamp(newX, 0, screenGui.AbsoluteSize.X - activeDragElement.AbsoluteSize.X)
    newY = math.clamp(newY, 0, screenGui.AbsoluteSize.Y - activeDragElement.AbsoluteSize.Y)

    activeDragElement.Position = UDim2.new(0, newX, 0, newY)

    if activeDragElement == mainFrame then
        Config.MainUIPosition = { X = newX, Y = newY }
    elseif activeDragElement == toggleButton then
        Config.UIPosition = { X = newX, Y = newY }
    end
    saveConfig()
end

local function setupDragging(handler, target)
    local isDragging = false
    local dragStartTime = 0

    handler.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch then
            dragStartTime = tick()
            isDragging = false

            local connection
            connection = RunService.Heartbeat:Connect(function()
                if tick() - dragStartTime > 0.2 then
                    isDragging = true
                    if activeDragElement == nil then
                        activeDragElement = target
                        dragStart = input.Position
                        startPos = target.Position
                    end
                    if connection then
                        connection:Disconnect()
                    end
                end
            end)

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    if connection then
                        connection:Disconnect()
                    end

                    if not isDragging and activeDragElement == nil then
                        if target == toggleButton then
                            toggleMenu()
                        end
                    end

                    if activeDragElement == target then
                        activeDragElement = nil
                        dragStart = nil
                    end
                end
            end)
        elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
            if activeDragElement == nil then
                activeDragElement = target
                dragStart = input.Position
                startPos = target.Position

                local connection
                connection = input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        activeDragElement = nil
                        dragStart = nil
                        if connection then
                            connection:Disconnect()
                        end
                    end
                end)
            end
        end
    end)

    handler.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        elseif input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
end

local function toggleMenu()
    menuEnabled = not menuEnabled
    mainFrame.Visible = menuEnabled
end

toggleButton.MouseButton1Click:Connect(toggleMenu)
toggleButton.TouchTap:Connect(toggleMenu)

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then
        return
    end
    if input.KeyCode == Enum.KeyCode.LeftControl then
        toggleMenu()
    end
end)

titleBar.MouseEnter:Connect(function()
    TweenService:Create(titleBar, TweenInfo.new(0.2), { BackgroundColor3 = Color3.fromRGB(25, 25, 25) }):Play()
end)

titleBar.MouseLeave:Connect(function()
    TweenService:Create(titleBar, TweenInfo.new(0.2), { BackgroundColor3 = Color3.fromRGB(15, 15, 15) }):Play()
end)

local antiEffectsCleanup = nil
local function startAntiEffects()
    local func = cachedFunctions.AntiEffects
    if func and type(func) == 'function' then
        local success, result = pcall(func)
        if success then
            antiEffectsCleanup = result
            functionStates.AntiEffects = true
            Config.AntiEffects = true
            saveConfig()
            return true
        else
            return false
        end
    else
        return false
    end
end

local function stopAntiEffects()
    if antiEffectsCleanup and type(antiEffectsCleanup) == 'function' then
        pcall(antiEffectsCleanup)
        antiEffectsCleanup = nil
    end
    functionStates.AntiEffects = false
    Config.AntiEffects = false
    saveConfig()
    return true
end

local ESPModule = nil
local function startESP()
    if functionStates.ESP then
        return true
    end

    local espModule = cachedFunctions.ESP
    if espModule and type(espModule) == 'table' then
        ESPModule = espModule
        if ESPModule.ToggleAll and type(ESPModule.ToggleAll) == 'function' then
            local success = pcall(function()
                ESPModule.ToggleAll(true)
            end)
            if success then
                functionStates.ESP = true
                Config.ESP = true
                saveConfig()
            else
                stopESP()
            end
            return success
        end
    end
    return false
end

local function stopESP()
    if not functionStates.ESP then
        return true
    end

    if ESPModule then
        if ESPModule.ToggleAll and type(ESPModule.ToggleAll) == 'function' then
            pcall(function()
                ESPModule.ToggleAll(false)
            end)
        end
        if ESPModule.Unload and type(ESPModule.Unload) == 'function' then
            pcall(function()
                ESPModule.Unload()
            end)
        end
        ESPModule = nil
    end

    pcall(function()
        for _, obj in pairs(workspace:GetDescendants()) do
            if obj:IsA('Highlight') or obj.Name:find('ESP') then
                obj:Destroy()
            end
        end
    end)

    functionStates.ESP = false
    Config.ESP = false
    saveConfig()
    return true
end

local controlPlayerCleanup = nil
local function startControlPlayer()
    if functionStates.ControlPlayer then
        return true
    end

    local func = cachedFunctions.ControlPlayer
    if func and type(func) == 'function' then
        local success, cleanupFunc = pcall(func)
        if success and type(cleanupFunc) == 'function' then
            controlPlayerCleanup = cleanupFunc
            functionStates.ControlPlayer = true
            Config.ControlPlayer = true
            saveConfig()
            return true
        elseif success then
            functionStates.ControlPlayer = true
            Config.ControlPlayer = true
            saveConfig()
            return true
        else
            return false
        end
    end
    return false
end

local function stopControlPlayer()
    if controlPlayerCleanup and type(controlPlayerCleanup) == 'function' then
        pcall(controlPlayerCleanup)
        controlPlayerCleanup = nil
    end

    functionStates.ControlPlayer = false
    Config.ControlPlayer = false
    saveConfig()

    pcall(function()
        local playerGui = player:FindFirstChild('PlayerGui')
        if playerGui then
            local controlGui = playerGui:FindFirstChild('ControlPlayerMenu')
            if controlGui then
                controlGui:Destroy()
            end
        end
    end)

    return true
end

local speedBoostCleanup = nil
local speedBoostModule = nil
local function startSpeedBoost()
    if functionStates.SpeedBoost then
        return true
    end

    pcall(function()
        local playerGui = player:FindFirstChild('PlayerGui')
        if playerGui then
            for _, gui in pairs(playerGui:GetChildren()) do
                if gui.Name == 'SpeedBoostMenu' then
                    gui:Destroy()
                end
            end
        end
    end)

    local func = cachedFunctions.SpeedBoost
    if func then
        if type(func) == 'function' then
            local success, cleanupFunc = pcall(func)
            if success then
                functionStates.SpeedBoost = true
                Config.SpeedBoost = true
                saveConfig()
                speedBoostCleanup = cleanupFunc
                return true
            else
                return false
            end
        else
            functionStates.SpeedBoost = true
            Config.SpeedBoost = true
            saveConfig()
            return true
        end
    end
    return false
end

local function stopSpeedBoost()
    if speedBoostCleanup and type(speedBoostCleanup) == 'function' then
        pcall(speedBoostCleanup)
        speedBoostCleanup = nil
    end

    functionStates.SpeedBoost = false
    Config.SpeedBoost = false
    saveConfig()

    pcall(function()
        local character = player.Character
        if character then
            local humanoid = character:FindFirstChild('Humanoid')
            if humanoid then
                humanoid.WalkSpeed = 16
            end

            local rootPart = character:FindFirstChild('HumanoidRootPart')
            if rootPart then
                rootPart.Velocity = Vector3.new(rootPart.Velocity.X, 0, rootPart.Velocity.Z)
            end
        end

        local playerGui = player:FindFirstChild('PlayerGui')
        if playerGui then
            for _, gui in pairs(playerGui:GetChildren()) do
                if gui.Name == 'SpeedBoostMenu' then
                    gui:Destroy()
                end
            end
        end
    end)

    return true
end

local laserStealCleanup = { ItemSpam = nil, AutoEquip = nil }
local function startLaserSteal()
    local laserSteal = cachedFunctions.LaserSteal
    if laserSteal and laserSteal.startItemSpam and type(laserSteal.startItemSpam) == 'function' and laserSteal.startAutoEquip and type(laserSteal.startAutoEquip) == 'function' then
        laserStealCleanup.ItemSpam = laserSteal.startItemSpam()
        laserStealCleanup.AutoEquip = laserSteal.startAutoEquip()
        functionStates.LaserSteal = true
        Config.LaserSteal = true
        saveConfig()
        return true
    end
    return false
end

local function stopLaserSteal()
    if laserStealCleanup.ItemSpam and type(laserStealCleanup.ItemSpam) == 'function' then
        pcall(laserStealCleanup.ItemSpam)
        laserStealCleanup.ItemSpam = nil
    end
    if laserStealCleanup.AutoEquip and type(laserStealCleanup.AutoEquip) == 'function' then
        pcall(laserStealCleanup.AutoEquip)
        laserStealCleanup.AutoEquip = nil
    end
    functionStates.LaserSteal = false
    Config.LaserSteal = false
    saveConfig()
    return true
end

-- –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
local antiEffectsToggle = Instance.new('TextButton')
antiEffectsToggle.Size = UDim2.new(1, 0, 0, 40)
antiEffectsToggle.Position = UDim2.new(0, 0, 0, 0)
antiEffectsToggle.BackgroundColor3 = mainColor
antiEffectsToggle.BorderSizePixel = 0
antiEffectsToggle.Text = 'ANTI-EFFECTS'
antiEffectsToggle.TextColor3 = textColor
antiEffectsToggle.Font = Enum.Font.SciFi
antiEffectsToggle.TextSize = 20
antiEffectsToggle.Parent = contentFrame

local antiEffectsToggleCorner = Instance.new('UICorner')
antiEffectsToggleCorner.CornerRadius = UDim.new(0, 6)
antiEffectsToggleCorner.Parent = antiEffectsToggle

local antiEffectsToggleStroke = Instance.new('UIStroke')
antiEffectsToggleStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
antiEffectsToggleStroke.Color = borderColor
antiEffectsToggleStroke.Thickness = 1.5
antiEffectsToggleStroke.LineJoinMode = Enum.LineJoinMode.Round
antiEffectsToggleStroke.Parent = antiEffectsToggle

antiEffectsToggle.MouseButton1Click:Connect(function()
    if functionStates.AntiEffects then
        if stopAntiEffects() then
            antiEffectsToggle.TextColor3 = textColor
            antiEffectsToggleStroke.Color = borderColor
        else
            antiEffectsToggle.TextColor3 = Color3.fromRGB(255, 50, 50)
            antiEffectsToggleStroke.Color = Color3.fromRGB(255, 50, 50)
        end
    else
        antiEffectsToggle.TextColor3 = Color3.fromRGB(255, 255, 100)
        antiEffectsToggleStroke.Color = Color3.fromRGB(255, 255, 100)

        if startAntiEffects() then
            antiEffectsToggle.TextColor3 = accentColor
            antiEffectsToggleStroke.Color = accentColor
        else
            antiEffectsToggle.TextColor3 = Color3.fromRGB(255, 50, 50)
            antiEffectsToggleStroke.Color = Color3.fromRGB(255, 50, 50)

            task.delay(2, function()
                if not functionStates.AntiEffects then
                    antiEffectsToggle.TextColor3 = textColor
                    antiEffectsToggleStroke.Color = borderColor
                end
            end)
        end
    end
end)

local espToggle = Instance.new('TextButton')
espToggle.Size = UDim2.new(1, 0, 0, 40)
espToggle.Position = UDim2.new(0, 0, 0, 50)
espToggle.BackgroundColor3 = mainColor
espToggle.BorderSizePixel = 0
espToggle.Text = 'ESP'
espToggle.TextColor3 = textColor
espToggle.Font = Enum.Font.SciFi
espToggle.TextSize = 20
espToggle.Parent = contentFrame

local espToggleCorner = Instance.new('UICorner')
espToggleCorner.CornerRadius = UDim.new(0, 6)
espToggleCorner.Parent = espToggle

local espToggleStroke = Instance.new('UIStroke')
espToggleStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
espToggleStroke.Color = borderColor
espToggleStroke.Thickness = 1.5
espToggleStroke.LineJoinMode = Enum.LineJoinMode.Round
espToggleStroke.Parent = espToggle

espToggle.MouseButton1Click:Connect(function()
    if functionStates.ESP then
        if stopESP() then
            espToggle.TextColor3 = textColor
            espToggleStroke.Color = borderColor
        else
            espToggle.TextColor3 = Color3.fromRGB(255, 50, 50)
            espToggleStroke.Color = Color3.fromRGB(255, 50, 50)
        end
    else
        espToggle.TextColor3 = Color3.fromRGB(255, 255, 100)
        espToggleStroke.Color = Color3.fromRGB(255, 255, 100)

        if startESP() then
            espToggle.TextColor3 = accentColor
            espToggleStroke.Color = accentColor
        else
            espToggle.TextColor3 = Color3.fromRGB(255, 50, 50)
            espToggleStroke.Color = Color3.fromRGB(255, 50, 50)

            task.delay(2, function()
                if not functionStates.ESP then
                    espToggle.TextColor3 = textColor
                    espToggleStroke.Color = borderColor
                end
            end)
        end
    end
end)

local controlPlayerToggle = Instance.new('TextButton')
controlPlayerToggle.Size = UDim2.new(1, 0, 0, 40)
controlPlayerToggle.Position = UDim2.new(0, 0, 0, 100)
controlPlayerToggle.BackgroundColor3 = mainColor
controlPlayerToggle.BorderSizePixel = 0
controlPlayerToggle.Text = 'CONTROL-PLAYER'
controlPlayerToggle.TextColor3 = textColor
controlPlayerToggle.Font = Enum.Font.SciFi
controlPlayerToggle.TextSize = 20
controlPlayerToggle.Parent = contentFrame

local controlPlayerToggleCorner = Instance.new('UICorner')
controlPlayerToggleCorner.CornerRadius = UDim.new(0, 6)
controlPlayerToggleCorner.Parent = controlPlayerToggle

local controlPlayerToggleStroke = Instance.new('UIStroke')
controlPlayerToggleStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
controlPlayerToggleStroke.Color = borderColor
controlPlayerToggleStroke.Thickness = 1.5
controlPlayerToggleStroke.LineJoinMode = Enum.LineJoinMode.Round
controlPlayerToggleStroke.Parent = controlPlayerToggle

controlPlayerToggle.MouseButton1Click:Connect(function()
    if functionStates.ControlPlayer then
        if stopControlPlayer() then
            controlPlayerToggle.TextColor3 = textColor
            controlPlayerToggleStroke.Color = borderColor
        else
            controlPlayerToggle.TextColor3 = Color3.fromRGB(255, 50, 50)
            controlPlayerToggleStroke.Color = Color3.fromRGB(255, 50, 50)
        end
    else
        controlPlayerToggle.TextColor3 = Color3.fromRGB(255, 255, 100)
        controlPlayerToggleStroke.Color = Color3.fromRGB(255, 255, 100)

        if startControlPlayer() then
            controlPlayerToggle.TextColor3 = accentColor
            controlPlayerToggleStroke.Color = accentColor
        else
            controlPlayerToggle.TextColor3 = Color3.fromRGB(255, 50, 50)
            controlPlayerToggleStroke.Color = Color3.fromRGB(255, 50, 50)

            task.delay(2, function()
                if not functionStates.ControlPlayer then
                    controlPlayerToggle.TextColor3 = textColor
                    controlPlayerToggleStroke.Color = borderColor
                end
            end)
        end
    end
end)

local speedBoostToggle = Instance.new('TextButton')
speedBoostToggle.Size = UDim2.new(1, 0, 0, 40)
speedBoostToggle.Position = UDim2.new(0, 0, 0, 150)
speedBoostToggle.BackgroundColor3 = mainColor
speedBoostToggle.BorderSizePixel = 0
speedBoostToggle.Text = 'SPEED-BOOST'
speedBoostToggle.TextColor3 = textColor
speedBoostToggle.Font = Enum.Font.SciFi
speedBoostToggle.TextSize = 20
speedBoostToggle.Parent = contentFrame

local speedBoostToggleCorner = Instance.new('UICorner')
speedBoostToggleCorner.CornerRadius = UDim.new(0, 6)
speedBoostToggleCorner.Parent = speedBoostToggle

local speedBoostToggleStroke = Instance.new('UIStroke')
speedBoostToggleStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
speedBoostToggleStroke.Color = borderColor
speedBoostToggleStroke.Thickness = 1.5
speedBoostToggleStroke.LineJoinMode = Enum.LineJoinMode.Round
speedBoostToggleStroke.Parent = speedBoostToggle

speedBoostToggle.MouseButton1Click:Connect(function()
    if functionStates.SpeedBoost then
        if stopSpeedBoost() then
            speedBoostToggle.TextColor3 = textColor
            speedBoostToggleStroke.Color = borderColor
        else
            speedBoostToggle.TextColor3 = Color3.fromRGB(255, 50, 50)
            speedBoostToggleStroke.Color = Color3.fromRGB(255, 50, 50)
        end
    else
        speedBoostToggle.TextColor3 = Color3.fromRGB(255, 255, 100)
        speedBoostToggleStroke.Color = Color3.fromRGB(255, 255, 100)

        if startSpeedBoost() then
            speedBoostToggle.TextColor3 = accentColor
            speedBoostToggleStroke.Color = accentColor
        else
            speedBoostToggle.TextColor3 = Color3.fromRGB(255, 50, 50)
            speedBoostToggleStroke.Color = Color3.fromRGB(255, 50, 50)

            task.delay(2, function()
                if not functionStates.SpeedBoost then
                    speedBoostToggle.TextColor3 = textColor
                    speedBoostToggleStroke.Color = borderColor
                end
            end)
        end
    end
end)

local laserStealToggle = Instance.new('TextButton')
laserStealToggle.Size = UDim2.new(1, 0, 0, 40)
laserStealToggle.Position = UDim2.new(0, 0, 0, 200)
laserStealToggle.BackgroundColor3 = mainColor
laserStealToggle.BorderSizePixel = 0
laserStealToggle.Text = 'LASER STEAL'
laserStealToggle.TextColor3 = textColor
laserStealToggle.Font = Enum.Font.SciFi
laserStealToggle.TextSize = 20
laserStealToggle.Parent = contentFrame

local laserStealToggleCorner = Instance.new('UICorner')
laserStealToggleCorner.CornerRadius = UDim.new(0, 6)
laserStealToggleCorner.Parent = laserStealToggle

local laserStealToggleStroke = Instance.new('UIStroke')
laserStealToggleStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
laserStealToggleStroke.Color = borderColor
laserStealToggleStroke.Thickness = 1.5
laserStealToggleStroke.LineJoinMode = Enum.LineJoinMode.Round
laserStealToggleStroke.Parent = laserStealToggle

laserStealToggle.MouseButton1Click:Connect(function()
    if functionStates.LaserSteal then
        if stopLaserSteal() then
            laserStealToggle.TextColor3 = textColor
            laserStealToggleStroke.Color = borderColor
        else
            laserStealToggle.TextColor3 = Color3.fromRGB(255, 50, 50)
            laserStealToggleStroke.Color = Color3.fromRGB(255, 50, 50)
        end
    else
        laserStealToggle.TextColor3 = Color3.fromRGB(255, 255, 100)
        laserStealToggleStroke.Color = Color3.fromRGB(255, 255, 100)

        if startLaserSteal() then
            laserStealToggle.TextColor3 = accentColor
            laserStealToggleStroke.Color = accentColor
        else
            laserStealToggle.TextColor3 = Color3.fromRGB(255, 50, 50)
            laserStealToggleStroke.Color = Color3.fromRGB(255, 50, 50)

            task.delay(2, function()
                if not functionStates.LaserSteal then
                    laserStealToggle.TextColor3 = textColor
                    laserStealToggleStroke.Color = borderColor
                end
            end)
        end
    end
end)

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π
local function setupDragEvents()
    setupDragging(titleBar, mainFrame)
    setupDragging(toggleButton, toggleButton)
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput or input.UserInputType == Enum.UserInputType.Touch then
            updateDrag(input)
        end
    end)
end

local function restoreFunctions()
    toggleButton.Position = UDim2.new(0, Config.UIPosition.X, 0, Config.UIPosition.Y)
    mainFrame.Position = UDim2.new(0, Config.MainUIPosition.X, 0, Config.MainUIPosition.Y)

    if Config.AntiEffects then
        task.spawn(startAntiEffects)
    end
    if Config.ESP then
        task.spawn(startESP)
    end
    if Config.ControlPlayer then
        task.spawn(startControlPlayer)
    end
    if Config.SpeedBoost then
        task.spawn(startSpeedBoost)
    end
    if Config.LaserSteal then
        task.spawn(startLaserSteal)
    end
end

local function onCharacterAdded(character)
    task.wait(1)
    restoreFunctions()
end

player.CharacterAdded:Connect(onCharacterAdded)

-- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI –∏ —Ñ—É–Ω–∫—Ü–∏–π –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
task.spawn(function()
    loadConfig()
    restoreFunctions()

    if functionStates.AntiEffects then
        antiEffectsToggle.TextColor3 = accentColor
        antiEffectsToggleStroke.Color = accentColor
    else
        antiEffectsToggle.TextColor3 = textColor
        antiEffectsToggleStroke.Color = borderColor
    end

    if functionStates.ESP then
        espToggle.TextColor3 = accentColor
        espToggleStroke.Color = accentColor
    else
        espToggle.TextColor3 = textColor
        espToggleStroke.Color = borderColor
    end

    if functionStates.ControlPlayer then
        controlPlayerToggle.TextColor3 = accentColor
        controlPlayerToggleStroke.Color = accentColor
    else
        controlPlayerToggle.TextColor3 = textColor
        controlPlayerToggleStroke.Color = borderColor
    end

    if functionStates.SpeedBoost then
        speedBoostToggle.TextColor3 = accentColor
        speedBoostToggleStroke.Color = accentColor
    else
        speedBoostToggle.TextColor3 = textColor
        speedBoostToggleStroke.Color = borderColor
    end

    if functionStates.LaserSteal then
        laserStealToggle.TextColor3 = accentColor
        laserStealToggleStroke.Color = accentColor
    else
        laserStealToggle.TextColor3 = textColor
        laserStealToggleStroke.Color = borderColor
    end

    mainFrame.Visible = false
    setupDragEvents()
end)

screenGui.Destroying:Connect(function()
    stopAntiEffects()
    stopESP()
    stopControlPlayer()
    stopSpeedBoost()
    stopLaserSteal()
end)

-- –ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–æ–∫
task.spawn(function()
    while true do
        task.wait(0.1)
        if functionStates.AntiEffects then
            if antiEffectsToggle.TextColor3 ~= accentColor and antiEffectsToggle.TextColor3 ~= Color3.fromRGB(255, 255, 100) then
                antiEffectsToggle.TextColor3 = accentColor
                antiEffectsToggleStroke.Color = accentColor
            end
        else
            if antiEffectsToggle.TextColor3 == accentColor or antiEffectsToggle.TextColor3 == Color3.fromRGB(255, 50, 50) then
                antiEffectsToggle.TextColor3 = textColor
                antiEffectsToggleStroke.Color = borderColor
            end
        end

        if functionStates.ESP then
            if espToggle.TextColor3 ~= accentColor and espToggle.TextColor3 ~= Color3.fromRGB(255, 255, 100) then
                espToggle.TextColor3 = accentColor
                espToggleStroke.Color = accentColor
            end
        else
            if espToggle.TextColor3 == accentColor or espToggle.TextColor3 == Color3.fromRGB(255, 50, 50) then
                espToggle.TextColor3 = textColor
                espToggleStroke.Color = borderColor
            end
        end

        if functionStates.ControlPlayer then
            if controlPlayerToggle.TextColor3 ~= accentColor and controlPlayerToggle.TextColor3 ~= Color3.fromRGB(255, 255, 100) then
                controlPlayerToggle.TextColor3 = accentColor
                controlPlayerToggleStroke.Color = accentColor
            end
        else
            if controlPlayerToggle.TextColor3 == accentColor or controlPlayerToggle.TextColor3 == Color3.fromRGB(255, 50, 50) then
                controlPlayerToggle.TextColor3 = textColor
                controlPlayerToggleStroke.Color = borderColor
            end
        end

        if functionStates.SpeedBoost then
            if speedBoostToggle.TextColor3 ~= accentColor and speedBoostToggle.TextColor3 ~= Color3.fromRGB(255, 255, 100) then
                speedBoostToggle.TextColor3 = accentColor
                speedBoostToggleStroke.Color = accentColor
            end
        else
            if speedBoostToggle.TextColor3 == accentColor or speedBoostToggle.TextColor3 == Color3.fromRGB(255, 50, 50) then
                speedBoostToggle.TextColor3 = textColor
                speedBoostToggleStroke.Color = borderColor
            end
        end

        if functionStates.LaserSteal then
            if laserStealToggle.TextColor3 ~= accentColor and laserStealToggle.TextColor3 ~= Color3.fromRGB(255, 255, 100) then
                laserStealToggle.TextColor3 = accentColor
                laserStealToggleStroke.Color = accentColor
            end
        else
            if laserStealToggle.TextColor3 == accentColor or laserStealToggle.TextColor3 == Color3.fromRGB(255, 50, 50) then
                laserStealToggle.TextColor3 = textColor
                laserStealToggleStroke.Color = borderColor
            end
        end
    end
end)
