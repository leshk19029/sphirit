-- =============================================
-- AutoHop Pet Scanner + Smart Server Hop
-- =============================================

-- CONFIG
local THRESHOLD = 100000
local SERVER_HOP_MIN = 60
local SERVER_HOP_MAX = 120

-- –ñ–¥—ë–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞
repeat task.wait() until game:IsLoaded()
local Players = game:GetService("Players")
local Player = Players.LocalPlayer
repeat task.wait() until Player and Player:FindFirstChild("PlayerGui")
local Workspace = game:GetService("Workspace")
repeat task.wait() until Workspace:FindFirstChild("Plots")
local TeleportService = game:GetService("TeleportService")

-- ================= UI =================
local screenGui = Instance.new("ScreenGui", Player:WaitForChild("PlayerGui"))
screenGui.Name = "PetScannerGui"
screenGui.ResetOnSpawn = false

local centerLabel = Instance.new("TextLabel", screenGui)
centerLabel.Size = UDim2.new(0.6, 0, 0.1, 0)
centerLabel.Position = UDim2.new(0.2, 0, 0.45, 0)
centerLabel.BackgroundTransparency = 1
centerLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
centerLabel.TextScaled = true
centerLabel.Font = Enum.Font.SourceSansBold
centerLabel.Text = "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è..."

local function setCenterText(text, color)
    centerLabel.Text = text
    if color then centerLabel.TextColor3 = color end
end

-- ================= Anti-Spam =================
local serverHistory = {}
local MAX_HISTORY = 10
local firstHopDone = false

-- =============== PET SCAN ===============
local function parseSalaryValue(text)
    if not text then return 0 end
    text = tostring(text):upper():gsub("%s+", ""):gsub(",", "")
    local num = tonumber(text:match("[%d%.]+")) or 0
    if text:find("M/S") then
        return num * 1e6
    elseif text:find("K/S") then
        return num * 1e3
    else
        return num
    end
end

local function findMostValuablePet()
    local plots = Workspace:FindFirstChild("Plots")
    if not plots then 
        print("‚ùå Plots –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return "", "", 0 
    end
    
    local bestV, bestN, bestS = 0, "", ""
    for _, plot in ipairs(plots:GetChildren()) do
        local pods = plot:FindFirstChild("AnimalPodiums")
        if pods then
            for _, podium in ipairs(pods:GetChildren()) do
                local spawn = podium:FindFirstChild("Base") and podium.Base:FindFirstChild("Spawn")
                if spawn and spawn:FindFirstChild("Attachment") then
                    local overhead = spawn.Attachment:FindFirstChild("AnimalOverhead")
                    if overhead and overhead:FindFirstChild("Generation") and overhead:FindFirstChild("DisplayName") then
                        local salary = overhead.Generation.Text
                        local val = parseSalaryValue(salary)
                        if val > bestV then
                            bestV, bestN, bestS = val, overhead.DisplayName.Text, salary
                        end
                    end
                end
            end
        end
    end
    return bestN, bestS, bestV
end

-- ============ SMART SERVER HOP ============
local function autoServerHop()
    local placeId = game.PlaceId
    setCenterText("üîç –ü–æ–∏—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ —Å 5-6 –∏–≥—Ä–æ–∫–∞–º–∏...", Color3.fromRGB(200, 200, 50))
    
    local success, result = pcall(function()
        local response = game:HttpGet("https://games.roblox.com/v1/games/" .. placeId .. "/servers/Public?limit=100", true)
        return game:GetService("HttpService"):JSONDecode(response)
    end)
    
    if not success or not result or not result.data then
        setCenterText("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤", Color3.fromRGB(255, 100, 100))
        task.wait(2)
        setCenterText("üîÑ –ò—Å–ø–æ–ª—å–∑—É—é —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –º–µ—Ç–æ–¥...", Color3.fromRGB(255, 200, 100))
        TeleportService:Teleport(placeId)
        return
    end
    
    local suitableServers = {}
    local currentJobId = game.JobId
    
    -- –ò—â–µ–º —Å–µ—Ä–≤–µ—Ä—ã —Å 5-6 –∏–≥—Ä–æ–∫–∞–º–∏
    for _, server in ipairs(result.data) do
        if server and server.playing and server.playing >= 5 and server.playing <= 6 and server.id ~= currentJobId then
            local isRecent = false
            for _, recentId in ipairs(serverHistory) do
                if server.id == recentId then
                    isRecent = true
                    break
                end
            end
            
            if not isRecent then
                table.insert(suitableServers, server)
            end
        end
    end
    
    -- –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Å–µ—Ä–≤–µ—Ä—ã
    if #suitableServers > 0 then
        local randomServer = suitableServers[math.random(1, #suitableServers)]
        table.insert(serverHistory, randomServer.id)
        if #serverHistory > MAX_HISTORY then
            table.remove(serverHistory, 1)
        end
        
        setCenterText("üéØ –ù–∞–π–¥–µ–Ω —Å–µ—Ä–≤–µ—Ä —Å " .. randomServer.playing .. " –∏–≥—Ä–æ–∫–∞–º–∏", Color3.fromRGB(100, 255, 100))
        task.wait(1)
        setCenterText("üöÄ –¢–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è...", Color3.fromRGB(255, 255, 100))
        TeleportService:TeleportToPlaceInstance(placeId, randomServer.id)
        return
    end
    
    -- –ò—â–µ–º —Å–µ—Ä–≤–µ—Ä—ã —Å 4-7 –∏–≥—Ä–æ–∫–∞–º–∏
    for _, server in ipairs(result.data) do
        if server and server.playing and server.playing >= 4 and server.playing <= 7 and server.id ~= currentJobId then
            local isRecent = false
            for _, recentId in ipairs(serverHistory) do
                if server.id == recentId then
                    isRecent = true
                    break
                end
            end
            
            if not isRecent then
                table.insert(suitableServers, server)
            end
        end
    end
    
    if #suitableServers > 0 then
        local randomServer = suitableServers[math.random(1, #suitableServers)]
        table.insert(serverHistory, randomServer.id)
        if #serverHistory > MAX_HISTORY then
            table.remove(serverHistory, 1)
        end
        
        setCenterText("üéØ –ù–∞–π–¥–µ–Ω —Å–µ—Ä–≤–µ—Ä —Å " .. randomServer.playing .. " –∏–≥—Ä–æ–∫–∞–º–∏", Color3.fromRGB(150, 255, 150))
        task.wait(1)
        setCenterText("üöÄ –¢–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è...", Color3.fromRGB(255, 255, 100))
        TeleportService:TeleportToPlaceInstance(placeId, randomServer.id)
        return
    end
    
    -- –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–∏
    serverHistory = {}
    setCenterText("‚ö†Ô∏è –ü–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ", Color3.fromRGB(255, 100, 100))
    task.wait(2)
    setCenterText("üîÑ –¢–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É—é –Ω–∞ —Å–ª—É—á–∞–π–Ω—ã–π —Å–µ—Ä–≤–µ—Ä...", Color3.fromRGB(255, 200, 100))
    TeleportService:Teleport(placeId)
end

-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏
TeleportService.TeleportInitFailed:Connect(function(_, _, errorMessage)
    warn("TeleportInitFailed:", errorMessage)
    setCenterText("‚ùå –û—à–∏–±–∫–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏, –ø—Ä–æ–±—É—é —Å–Ω–æ–≤–∞...", Color3.fromRGB(255, 100, 100))
    task.wait(3)
    autoServerHop()
end)

-- =============== MAIN LOOP ===============
task.spawn(function()
    task.wait(5)
    print("‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω! –ò—â–µ–º –ø–µ—Ç–æ–≤...")
    setCenterText("‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω!", Color3.fromRGB(100, 255, 100))
    
    while true do
        local name, salary, value = findMostValuablePet()
        if value > 0 then
            print("üîç –ù–∞–π–¥–µ–Ω –ø–µ—Ç:", name, "–ó–∞—Ä–ø–ª–∞—Ç–∞:", salary, "–ó–Ω–∞—á–µ–Ω–∏–µ:", value)
            setCenterText("–ü–µ—Ç: "..name.." | "..salary, Color3.fromRGB(180,255,180))
        else
            print("‚ùå –ü–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            setCenterText("‚ùå –ü–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", Color3.fromRGB(255,100,100))
        end
        
        if value >= THRESHOLD then
            print("‚ö†Ô∏è –í–´–°–û–ö–ò–ô –ü–ï–¢:", name, salary)
            setCenterText("‚ö†Ô∏è High Pet: "..name.." "..salary, Color3.fromRGB(255,100,100))
            
            if not firstHopDone then
                firstHopDone = true
                task.spawn(autoServerHop)
            end
        end
        
        task.wait(3)
    end
end)

-- =============== PERIODIC SERVER HOP ===============
task.spawn(function()
    while true do
        task.wait(math.random(SERVER_HOP_MIN, SERVER_HOP_MAX))
        print("üîÑ –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–π —Å–µ—Ä–≤–µ—Ä —Ö–æ–ø")
        task.spawn(autoServerHop)
    end
end)

-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–≤—ã–π —Ö–æ–ø
task.spawn(function()
    task.wait(8)
    if not firstHopDone then
        print("üöÄ –ü–µ—Ä–≤—ã–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ö–æ–ø")
        autoServerHop()
    end
end)

print("=============================================")
print("ü§ñ AutoHop Pet Scanner –∑–∞–ø—É—â–µ–Ω!")
print("üìä Threshold:", THRESHOLD)
print("‚è∞ Server hop:", SERVER_HOP_MIN .. "-" .. SERVER_HOP_MAX .. " —Å–µ–∫")
print("=============================================")
