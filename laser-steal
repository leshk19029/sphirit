local Players = game:GetService('Players')
local RunService = game:GetService('RunService')
local Event = game:GetService('ReplicatedStorage').Packages.Net['RE/UseItem']

local player = Players.LocalPlayer
local isFiring = false
local fireRate = 30 -- Default rate, can be overridden
local fireInterval = 1 / fireRate
local lastFireTime = 0
local equipConnection = nil
local spamConnection = nil
local spawnLoopRunning = false

-- Функция для безопасного получения персонажа
local function getCharacter(p)
    if p and p.Character then
        return p.Character
    end
    warn('No character found for player:', p.Name)
    return nil
end

-- Функция для получения случайного игрока
local function getRandomPlayer()
    local players = Players:GetPlayers()
    local validPlayers = {}

    for _, p in ipairs(players) do
        if p ~= Players.LocalPlayer then
            local character = getCharacter(p)
            if character and character:FindFirstChild('UpperTorso') then
                table.insert(validPlayers, character)
            end
        end
    end

    if #validPlayers > 0 then
        return validPlayers[math.random(1, #validPlayers)]
    end
    -- Fallback to local player's UpperTorso if no other players
    local localCharacter = getCharacter(player)
    if localCharacter and localCharacter:FindFirstChild('UpperTorso') then
        warn('No other players found, using local player as target')
        return localCharacter
    end
    warn('No valid players or local UpperTorso found for spamEvent')
    return nil
end

-- Функция для спама ивентами
local function spamEvent()
    local targetCharacter = getRandomPlayer()
    if targetCharacter and targetCharacter:FindFirstChild('UpperTorso') then
        local success, errorMsg = pcall(function()
            Event:FireServer(
                Vector3.new(-344.38818359375, 2.8618948459625, 35.521560668945),
                targetCharacter.UpperTorso
            )
        end)

        if not success then
            warn('Ошибка при вызове FireServer: ' .. errorMsg)
        end
    else
        warn('No target character or UpperTorso for spamEvent')
    end
end

-- Функция для взятия Laser Cape
local function takeLaserCape()
    local backpack = player:FindFirstChild('Backpack')
    if not backpack then
        warn('No Backpack found')
        return false
    end

    for _, tool in ipairs(backpack:GetChildren()) do
        if tool:IsA('Tool') and (tool.Name:lower():find('laser') and tool.Name:lower():find('cape')) then
            local character = player.Character
            if character then
                local humanoid = character:FindFirstChild('Humanoid')
                if humanoid then
                    humanoid:EquipTool(tool)
                    print('Equipped Laser Cape:', tool.Name)
                    return true
                else
                    warn('No Humanoid found in character')
                end
            else
                warn('No character found for equipping')
            end
        end
    end
    warn('No Laser Cape found in Backpack')
    return false
end

-- Запуск авто-экипировки
local function startAutoEquip()
    if equipConnection then
        equipConnection:Disconnect()
    end

    equipConnection = RunService.Heartbeat:Connect(function()
        local character = player.Character
        if character then
            local hasLaserCape = false
            for _, tool in ipairs(character:GetChildren()) do
                if tool:IsA('Tool') and (tool.Name:lower():find('laser') and tool.Name:lower():find('cape')) then
                    hasLaserCape = true
                    break
                end
            end

            if not hasLaserCape then
                takeLaserCape()
            end
        else
            warn('No character for auto-equip')
        end
    end)

    return function()
        if equipConnection then
            equipConnection:Disconnect()
            equipConnection = nil
        end
    end
end

-- Основной цикл для спама
local function startItemSpam(rate)
    if rate then
        fireRate = math.clamp(rate, 10, 60)
        fireInterval = 1 / fireRate
    end
    isFiring = true

    -- Heartbeat loop
    if spamConnection then
        spamConnection:Disconnect()
    end
    spamConnection = RunService.Heartbeat:Connect(function()
        if not isFiring then
            spamConnection:Disconnect()
            spamConnection = nil
            return
        end

        local currentTime = tick()
        if currentTime - lastFireTime >= fireInterval then
            lastFireTime = currentTime
            spamEvent()
        end
    end)

    -- Spawn loop for redundancy
    if not spawnLoopRunning then
        spawnLoopRunning = true
        spawn(function()
            while spawnLoopRunning and isFiring do
                spamEvent()
                wait(fireInterval)
            end
            spawnLoopRunning = false
        end)
    end

    return function()
        isFiring = false
        if spamConnection then
            spamConnection:Disconnect()
            spamConnection = nil
        end
        spawnLoopRunning = false
    end
end

-- Экспортируем функции
return {
    startItemSpam = startItemSpam,
    startAutoEquip = startAutoEquip,
    spamEvent = spamEvent,
    takeLaserCape = takeLaserCape
}
