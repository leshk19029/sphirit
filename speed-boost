local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- Оптимизированные переменные
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")
local Event = ReplicatedStorage.Packages.Net["RE/UseItem"]

-- Создание интерфейса
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "GreyGooUltraPro"
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.Parent = player:WaitForChild("PlayerGui")

-- Основной контейнер
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 200, 0, 80)
MainFrame.Position = UDim2.new(0, 10, 0, 10)
MainFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
MainFrame.BackgroundTransparency = 0.1
MainFrame.BorderSizePixel = 0
MainFrame.Active = true

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 8)
UICorner.Parent = MainFrame

-- Заголовок
local Title = Instance.new("TextLabel")
Title.Text = "Grapple Speed (Q)"
Title.Size = UDim2.new(1, 0, 0, 20)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.BackgroundTransparency = 1
Title.TextColor3 = Color3.fromRGB(200, 200, 200)
Title.Font = Enum.Font.GothamMedium
Title.TextSize = 12
Title.TextXAlignment = Enum.TextXAlignment.Center

-- Кнопка управления
local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0.9, 0, 0, 25)
ToggleButton.Position = UDim2.new(0.05, 0, 0.3, 0)
ToggleButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
ToggleButton.Text = "OFF"
ToggleButton.TextColor3 = Color3.fromRGB(220, 220, 220)
ToggleButton.Font = Enum.Font.Gotham
ToggleButton.TextSize = 11
ToggleButton.AutoButtonColor = false

local ButtonCorner = Instance.new("UICorner")
ButtonCorner.CornerRadius = UDim.new(0, 4)
ButtonCorner.Parent = ToggleButton

-- Поле ввода скорости
local SpeedInput = Instance.new("TextBox")
SpeedInput.Size = UDim2.new(0.9, 0, 0, 20)
SpeedInput.Position = UDim2.new(0.05, 0, 0.65, 0)
SpeedInput.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
SpeedInput.BorderSizePixel = 0
SpeedInput.Text = "140"
SpeedInput.TextColor3 = Color3.fromRGB(220, 220, 220)
SpeedInput.Font = Enum.Font.Gotham
SpeedInput.TextSize = 11
SpeedInput.PlaceholderText = "Speed"
SpeedInput.ClearTextOnFocus = false

local InputCorner = Instance.new("UICorner")
InputCorner.CornerRadius = UDim.new(0, 4)
InputCorner.Parent = SpeedInput

-- Иерархия объектов
Title.Parent = MainFrame
ToggleButton.Parent = MainFrame
SpeedInput.Parent = MainFrame
MainFrame.Parent = ScreenGui

-- Настройки
local MAX_SPEED = 190
local MIN_SPEED = 16
local currentSpeed = 160
local allFeaturesActive = false
local isDragging = false
local dragStart
local startPos
local hasGrappleHook = false
local grappleCheckRunning = false

-- Функция проверки наличия Grapple Hook в инвентаре
local function hasGrappleInBackpack()
    local backpack = player:FindFirstChild("Backpack")
    if backpack then
        for _, item in ipairs(backpack:GetChildren()) do
            if item.Name == "Grapple Hook" then
                return true
            end
        end
    end
    return false
end

-- Функция проверки наличия Grapple Hook в руках
local function hasGrappleInHands()
    if character then
        -- Проверяем инструменты в руках
        for _, tool in ipairs(character:GetChildren()) do
            if tool:IsA("Tool") and tool.Name == "Grapple Hook" then
                return true
            end
        end
        
        -- Альтернативная проверка через RightGrip/LeftGrip
        local rightHand = character:FindFirstChild("RightHand")
        local leftHand = character:FindFirstChild("LeftHand")
        
        if rightHand then
            local rightGrip = rightHand:FindFirstChild("RightGrip")
            if rightGrip and rightGrip.Part1 and string.find(rightGrip.Part1.Name:lower(), "grapple") then
                return true
            end
        end
        
        if leftHand then
            local leftGrip = leftHand:FindFirstChild("LeftGrip")
            if leftGrip and leftGrip.Part1 and string.find(leftGrip.Part1.Name:lower(), "grapple") then
                return true
            end
        end
    end
    return false
end

-- Функция поиска Grapple Hook в workspace
local function findGrappleHookInWorkspace()
    local grappleHooks = {}
    
    -- Ищем все части с названием Grapple Hook
    for _, item in ipairs(workspace:GetDescendants()) do
        if (item:IsA("Part") or item:IsA("MeshPart") or item:IsA("Tool")) and 
           (item.Name == "Grapple Hook" or string.find(item.Name:lower(), "grapple")) then
            
            -- Проверяем, не находится ли уже у другого игрока
            local inPlayerInventory = false
            for _, otherPlayer in ipairs(Players:GetPlayers()) do
                if otherPlayer.Character and item:IsDescendantOf(otherPlayer.Character) then
                    inPlayerInventory = true
                    break
                end
                if otherPlayer:FindFirstChild("Backpack") and item:IsDescendantOf(otherPlayer.Backpack) then
                    inPlayerInventory = true
                    break
                end
            end
            
            if not inPlayerInventory then
                table.insert(grappleHooks, item)
            end
        end
    end
    
    -- Сортируем по расстоянию (ближайшие первыми)
    table.sort(grappleHooks, function(a, b)
        local posA = a:IsA("Tool") and a:FindFirstChild("Handle") and a.Handle.Position or a.Position
        local posB = b:IsA("Tool") and b:FindFirstChild("Handle") and b.Handle.Position or b.Position
        local distA = (posA - humanoidRootPart.Position).Magnitude
        local distB = (posB - humanoidRootPart.Position).Magnitude
        return distA < distB
    end)
    
    return grappleHooks[1] -- Возвращаем ближайший
end

-- Улучшенная функция подбора Grapple Hook
local function pickupGrappleHook(grappleItem)
    if not character or not humanoid then return false end
    
    -- Подходим к Grapple Hook
    local targetPosition
    if grappleItem:IsA("Tool") and grappleItem:FindFirstChild("Handle") then
        targetPosition = grappleItem.Handle.Position
    else
        targetPosition = grappleItem.Position
    end
    
    humanoid:MoveTo(targetPosition + Vector3.new(0, 0, 3))
    
    -- Ждем пока подойдем ближе
    local waitTime = 0
    while waitTime < 3 and (humanoidRootPart.Position - targetPosition).Magnitude > 6 do
        wait(0.1)
        waitTime = waitTime + 0.1
        if not allFeaturesActive then return false end
    end
    
    -- Пытаемся подобрать разными методами
    local success = false
    
    -- Метод 1: Через Touch (для частей)
    if grappleItem:IsA("Part") or grappleItem:IsA("MeshPart") then
        local touchInterest = grappleItem:FindFirstChildOfClass("TouchTransmitter")
        if not touchInterest then
            touchInterest = Instance.new("TouchTransmitter")
            touchInterest.Parent = grappleItem
        end
        
        -- Эмулируем касание
        humanoidRootPart.CFrame = CFrame.new(targetPosition + Vector3.new(0, 0, 2))
        wait(0.1)
    end
    
    -- Метод 2: Через ClickDetector (для инструментов)
    local clickDetector = grappleItem:FindFirstChildOfClass("ClickDetector")
    if not clickDetector and (grappleItem:IsA("Part") or grappleItem:IsA("MeshPart")) then
        clickDetector = Instance.new("ClickDetector")
        clickDetector.Parent = grappleItem
    end
    
    if clickDetector then
        clickDetector.MaxActivationDistance = 50
        clickDetector.MouseClick:Fire()
    end
    
    -- Метод 3: Прямое перемещение к игроку (для инструментов)
    if grappleItem:IsA("Tool") then
        grappleItem.Parent = player.Backpack
        success = true
    end
    
    -- Метод 4: Через RemoteEvent (если есть)
    for _, descendant in ipairs(grappleItem:GetDescendants()) do
        if descendant:IsA("RemoteEvent") and (descendant.Name:lower():find("pick") or descendant.Name:lower():find("take")) then
            pcall(function()
                descendant:FireServer()
                success = true
            end)
        end
    end
    
    -- Ждем и проверяем, подобрали ли
    wait(0.5)
    
    return hasGrappleInHands() or hasGrappleInBackpack() or success
end

-- Функция экипировки Grapple Hook из инвентаря
local function equipGrappleFromBackpack()
    local backpack = player:FindFirstChild("Backpack")
    if backpack then
        for _, tool in ipairs(backpack:GetChildren()) do
            if tool.Name == "Grapple Hook" and tool:IsA("Tool") then
                tool.Parent = character
                wait(0.2)
                return true
            end
        end
    end
    return false
end

-- Система постоянной проверки Grapple Hook
local function grappleHookMonitor()
    if grappleCheckRunning then return end
    grappleCheckRunning = true
    
    local lastPickupAttempt = 0
    local PICKUP_COOLDOWN = 2 -- 2 секунды кулдаун между попытками подбора
    
    while allFeaturesActive do
        local currentTime = tick()
        hasGrappleHook = hasGrappleInHands() or hasGrappleInBackpack()
        
        if not hasGrappleHook then
            -- Сначала проверяем инвентарь и экипируем
            if hasGrappleInBackpack() then
                equipGrappleFromBackpack()
            else
                -- Ищем в мире, но с кулдауном
                if currentTime - lastPickupAttempt > PICKUP_COOLDOWN then
                    local grapple = findGrappleHookInWorkspace()
                    if grapple then
                        pickupGrappleHook(grapple)
                        lastPickupAttempt = currentTime
                    else
                        -- Расширенный поиск с другими названиями
                        for _, item in ipairs(workspace:GetDescendants()) do
                            if (item:IsA("Tool") or item:IsA("Part")) and 
                               (string.find(item.Name:lower(), "hook") or 
                                string.find(item.Name:lower(), "grapple") or
                                string.find(item.Name:lower(), "rope")) then
                                
                                local isOwned = false
                                for _, otherPlayer in ipairs(Players:GetPlayers()) do
                                    if otherPlayer.Character and item:IsDescendantOf(otherPlayer.Character) then
                                        isOwned = true
                                        break
                                    end
                                    if otherPlayer.Backpack and item:IsDescendantOf(otherPlayer.Backpack) then
                                        isOwned = true
                                        break
                                    end
                                end
                                
                                if not isOwned then
                                    pickupGrappleHook(item)
                                    lastPickupAttempt = currentTime
                                    break
                                end
                            end
                        end
                    end
                end
            end
        else
            -- Если есть в инвентаре но не в руках - экипируем
            if hasGrappleInBackpack() and not hasGrappleInHands() then
                equipGrappleFromBackpack()
            end
        end
        
        -- Проверяем каждые 0.25 секунды
        wait(0.25)
    end
    
    grappleCheckRunning = false
end

-- Остальной код остается таким же...

-- Функция для плавного перемещения
local function updateFramePosition(input)
    if not isDragging then return end
    
    local delta = input.Position - dragStart
    MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

-- Обработчики перемещения для ПК
MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        isDragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                isDragging = false
            end
        end)
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement and isDragging then
        updateFramePosition(input)
    end
end)

-- Обработчики для мобильных устройств
local function startMobileDrag(input)
    isDragging = true
    dragStart = input.Position
    startPos = MainFrame.Position
end

local function endMobileDrag()
    isDragging = false
end

local function updateMobileDrag(input)
    if isDragging then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end

-- Обработчики тапов для мобильных устройств
MainFrame.TouchLongPress:Connect(startMobileDrag)
MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        startMobileDrag(input)
    end
end)

UserInputService.TouchMoved:Connect(updateMobileDrag)
UserInputService.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch and isDragging then
        updateMobileDrag(input)
    end
end)

UserInputService.TouchEnded:Connect(endMobileDrag)
UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        endMobileDrag()
    end
end)

-- Функция для эмуляции нажатий на телефонах
local function emulatePhoneTaps()
    while allFeaturesActive do
        local phones = {}
        
        for _, obj in pairs(workspace:GetDescendants()) do
            if obj:IsA("Part") or obj:IsA("MeshPart") then
                local nameLower = obj.Name:lower()
                if nameLower:find("phone") or nameLower:find("mobile") or nameLower:find("cell") then
                    table.insert(phones, obj)
                end
            end
        end
        
        for _, phone in ipairs(phones) do
            if not allFeaturesActive then break end
            
            local touchEvent = Instance.new("TouchTransmitter")
            touchEvent.Parent = phone
            
            task.wait(0.01)
        end
        
        if allFeaturesActive then
            task.wait(5)
        end
    end
end

-- Улучшенный спам (только если есть Grapple Hook)
local function improvedSpam()
    local BURST_COUNT = 80
    local DELAY_BETWEEN_BURSTS = 2.86
    local DELAY_BETWEEN_SHOTS = 0.035
    
    task.spawn(emulatePhoneTaps)
    
    while allFeaturesActive do
        -- Проверяем наличие Grapple Hook перед спамом
        if hasGrappleInHands() or hasGrappleInBackpack() then
            for i = 1, BURST_COUNT do
                if not allFeaturesActive then break end
                
                Event:FireServer(0.1780485312144)
                
                local targetTime = os.clock() + DELAY_BETWEEN_SHOTS
                while os.clock() < targetTime and allFeaturesActive do
                    RunService.Heartbeat:Wait()
                end
            end
        else
            -- Если нет Grapple Hook, ждем и проверяем снова
            wait(0.5)
        end
        
        if allFeaturesActive then
            local waitEnd = os.clock() + DELAY_BETWEEN_BURSTS
            while os.clock() < waitEnd and allFeaturesActive do
                RunService.Heartbeat:Wait()
            end
        end
    end
end

-- Система движения
local function velocityControl()
    while true do
        if allFeaturesActive and character and humanoidRootPart then
            local camera = workspace.CurrentCamera
            local moveDirection = Vector3.new()
            
            local effectiveSpeed = currentSpeed
            
            if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                moveDirection = moveDirection + camera.CFrame.LookVector
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                moveDirection = moveDirection - camera.CFrame.LookVector
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                moveDirection = moveDirection - camera.CFrame.RightVector
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                moveDirection = moveDirection + camera.CFrame.RightVector
            end
            
            if moveDirection.Magnitude > 0 then
                moveDirection = moveDirection.Unit
                humanoidRootPart.Velocity = Vector3.new(moveDirection.X * effectiveSpeed, humanoidRootPart.Velocity.Y, moveDirection.Z * effectiveSpeed)
            end
        end
        RunService.Heartbeat:Wait()
    end
end

-- Обновление скорости из текстового поля
local function updateSpeedFromInput()
    local inputText = SpeedInput.Text
    local newSpeed = tonumber(inputText)
    
    if newSpeed then
        newSpeed = math.clamp(newSpeed, MIN_SPEED, MAX_SPEED)
        currentSpeed = newSpeed
        SpeedInput.Text = tostring(math.floor(newSpeed))
    else
        SpeedInput.Text = tostring(currentSpeed)
    end
end

-- Главная функция управления
local function toggleAllFeatures()
    allFeaturesActive = not allFeaturesActive
    
    if allFeaturesActive then
        ToggleButton.Text = "ON"
        ToggleButton.BackgroundColor3 = Color3.fromRGB(0, 100, 0)
        
        -- Запускаем мониторинг Grapple Hook
        task.spawn(grappleHookMonitor)
        task.spawn(improvedSpam)
    else
        ToggleButton.Text = "OFF"
        ToggleButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        if character and humanoidRootPart then
            humanoidRootPart.Velocity = Vector3.new(0, humanoidRootPart.Velocity.Y, 0)
        end
    end
end

-- Обработчики событий
SpeedInput.FocusLost:Connect(updateSpeedFromInput)

ToggleButton.MouseButton1Click:Connect(toggleAllFeatures)

-- Поддержка Touch для мобильных устройств
ToggleButton.TouchTap:Connect(toggleAllFeatures)

-- Бинд на Q для включения/выключения
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.Q then
        toggleAllFeatures()
    end
end)

-- Запуск системы движения
task.spawn(velocityControl)

-- Авто-восстановление
player.CharacterAdded:Connect(function(newChar)
    character = newChar
    humanoidRootPart = newChar:WaitForChild("HumanoidRootPart")
    humanoid = newChar:WaitForChild("Humanoid")
    
    -- Перезапускаем мониторинг если фичи активны
    if allFeaturesActive then
        wait(2) -- Даем время персонажу заспавниться
        task.spawn(grappleHookMonitor)
    end
end)

-- Очистка при респавне
game:GetService("StarterGui"):SetCore("ResetButtonCallback", function()
    ScreenGui:Destroy()
end)

-- Инициализация
updateSpeedFromInput()
