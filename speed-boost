local Players = game:GetService('Players')
local TweenService = game:GetService('TweenService')
local UserInputService = game:GetService('UserInputService')
local RunService = game:GetService('RunService')

return function()
    local player = Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild('Humanoid', 5)

    -- Проверка на существование humanoid
    if not humanoid then
        return function() end
    end

    -- Функция для создания GUI
    local function createGui()
        local ScreenGui = Instance.new('ScreenGui')
        ScreenGui.Name = 'SpeedControl'
        ScreenGui.Parent = player.PlayerGui
        ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        ScreenGui.ResetOnSpawn = false -- Предотвращаем сброс при респавне
        ScreenGui.IgnoreGuiInset = true -- Игнорируем верхнюю панель Roblox

        -- Контейнер для элементов управления
        local controlContainer = Instance.new('Frame')
        controlContainer.Size = UDim2.new(0, 180, 0, 50)
        controlContainer.Position = UDim2.new(0, 90, 0, 150)
        controlContainer.BackgroundTransparency = 1
        controlContainer.Parent = ScreenGui

        -- Линия для перемещения (чуть выше)
        local dragHandle = Instance.new('TextButton')
        dragHandle.Size = UDim2.new(1, 0, 0, 15) -- Высота 15 (как в предыдущей версии)
        dragHandle.Position = UDim2.new(0, 0, 0, -15) -- Чуть выше (-15 вместо -10)
        dragHandle.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
        dragHandle.BorderSizePixel = 0
        dragHandle.Text = ""
        dragHandle.AutoButtonColor = false
        dragHandle.Parent = controlContainer

        local dragHandleCorner = Instance.new('UICorner')
        dragHandleCorner.CornerRadius = UDim.new(0, 3)
        dragHandleCorner.Parent = dragHandle

        -- Основная кнопка
        local controlButton = Instance.new('TextButton')
        controlButton.Size = UDim2.new(0, 120, 0, 40)
        controlButton.Position = UDim2.new(0, 0, 0, 0)
        controlButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
        controlButton.BorderSizePixel = 0
        controlButton.Text = 'SPEED: OFF'
        controlButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        controlButton.Font = Enum.Font.Code
        controlButton.TextSize = 14
        controlButton.Parent = controlContainer

        local controlButtonCorner = Instance.new('UICorner')
        controlButtonCorner.CornerRadius = UDim.new(0, 6)
        controlButtonCorner.Parent = controlButton

        local controlButtonStroke = Instance.new('UIStroke')
        controlButtonStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
        controlButtonStroke.Color = Color3.fromRGB(50, 50, 50)
        controlButtonStroke.Thickness = 2
        controlButtonStroke.LineJoinMode = Enum.LineJoinMode.Round
        controlButtonStroke.Parent = controlButton

        -- Текстовое поле для ввода скорости
        local speedTextBox = Instance.new('TextBox')
        speedTextBox.Size = UDim2.new(0, 50, 0, 40)
        speedTextBox.Position = UDim2.new(0, 130, 0, 0)
        speedTextBox.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
        speedTextBox.BorderSizePixel = 0
        speedTextBox.Text = '25'
        speedTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
        speedTextBox.Font = Enum.Font.Code
        speedTextBox.TextSize = 14
        speedTextBox.PlaceholderText = 'Speed'
        speedTextBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
        speedTextBox.TextXAlignment = Enum.TextXAlignment.Center
        speedTextBox.Parent = controlContainer

        local speedTextBoxCorner = Instance.new('UICorner')
        speedTextBoxCorner.CornerRadius = UDim.new(0, 6)
        speedTextBoxCorner.Parent = speedTextBox

        local speedTextBoxStroke = Instance.new('UIStroke')
        speedTextBoxStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
        speedTextBoxStroke.Color = Color3.fromRGB(50, 50, 50)
        speedTextBoxStroke.Thickness = 2
        speedTextBoxStroke.LineJoinMode = Enum.LineJoinMode.Round
        speedTextBoxStroke.Parent = speedTextBox

        return ScreenGui, controlContainer, dragHandle, controlButton, speedTextBox
    end

    -- Переменные состояния
    local speedEnabled = false
    local currentSpeed = 25
    local savedPosition = UDim2.new(0, 90, 0, 150) -- Сохраняем позицию по умолчанию
    local dragInput, dragStart, startPos
    local ScreenGui, controlContainer, dragHandle, controlButton, speedTextBox
    local velocityConnection

    -- Создаём GUI в начале
    ScreenGui, controlContainer, dragHandle, controlButton, speedTextBox = createGui()
    controlContainer.Position = savedPosition -- Восстанавливаем позицию

    -- Функция для применения скорости
    local function applyVelocity()
        if not speedEnabled or not character or not humanoid or not humanoid.Parent then
            return
        end

        local rootPart = character:FindFirstChild('HumanoidRootPart')
        if not rootPart then
            return
        end

        local moveDirection = humanoid.MoveDirection
        if moveDirection.Magnitude > 0 then
            local velocity = moveDirection * currentSpeed
            rootPart.Velocity = Vector3.new(velocity.X, rootPart.Velocity.Y, velocity.Z)
        else
            rootPart.Velocity = Vector3.new(0, rootPart.Velocity.Y, 0) -- Сбрасываем горизонтальную скорость
        end
    end

    -- Функция для обновления скорости из текстового поля
    local function updateSpeedFromTextBox()
        local text = speedTextBox.Text
        if text and text ~= "" then
            local newSpeed = tonumber(text)
            if newSpeed then
                if newSpeed > 45 then
                    currentSpeed = 45
                    speedTextBox.Text = "45"
                elseif newSpeed < 1 then
                    currentSpeed = 1
                    speedTextBox.Text = "1"
                else
                    currentSpeed = newSpeed
                end
            else
                speedTextBox.Text = tostring(currentSpeed)
            end
        end
    end

    -- Функция перетаскивания
    local function updateDrag(input)
        if not dragStart then return end
        local delta = input.Position - dragStart
        local newX = startPos.X.Offset + delta.X
        local newY = startPos.Y.Offset + delta.Y

        newX = math.clamp(newX, 0, ScreenGui.AbsoluteSize.X - controlContainer.AbsoluteSize.X)
        newY = math.clamp(newY, 0, ScreenGui.AbsoluteSize.Y - controlContainer.AbsoluteSize.Y)

        controlContainer.Position = UDim2.new(0, newX, 0, newY)
        savedPosition = controlContainer.Position -- Сохраняем новую позицию
    end

    -- Обработчики событий перетаскивания
    local function setupDragging(element)
        element.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragStart = input.Position
                startPos = controlContainer.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragStart = nil
                    end
                end)
            end
        end)

        element.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement then
                dragInput = input
            end
        end)
    end

    -- Настройка событий для GUI
    local function setupGuiEvents()
        setupDragging(dragHandle)
        setupDragging(controlButton)
        setupDragging(speedTextBox)

        UserInputService.InputChanged:Connect(function(input)
            if input == dragInput and dragStart then
                updateDrag(input)
            end
        end)

        dragHandle.MouseEnter:Connect(function()
            TweenService:Create(
                dragHandle,
                TweenInfo.new(0.2),
                {BackgroundColor3 = Color3.fromRGB(100, 100, 100)}
            ):Play()
        end)

        dragHandle.MouseLeave:Connect(function()
            TweenService:Create(
                dragHandle,
                TweenInfo.new(0.2),
                {BackgroundColor3 = Color3.fromRGB(80, 80, 80)}
            ):Play()
        end)

        controlButton.MouseEnter:Connect(function()
            TweenService:Create(
                controlButton,
                TweenInfo.new(0.2),
                {BackgroundColor3 = Color3.fromRGB(35, 35, 35)}
            ):Play()
        end)

        controlButton.MouseLeave:Connect(function()
            TweenService:Create(
                controlButton,
                TweenInfo.new(0.2),
                {BackgroundColor3 = Color3.fromRGB(25, 25, 25)}
            ):Play()
        end)

        controlButton.MouseButton1Click:Connect(function()
            speedEnabled = not speedEnabled
            controlButton.Text = speedEnabled and 'SPEED: ON' or 'SPEED: OFF'
        end)

        speedTextBox.FocusLost:Connect(function(enterPressed)
            updateSpeedFromTextBox()
        end)

        -- Восстанавливаем состояние переключателя и скорости
        controlButton.Text = speedEnabled and 'SPEED: ON' or 'SPEED: OFF'
        speedTextBox.Text = tostring(currentSpeed)
    end

    setupGuiEvents()

    -- Обработка смены персонажа (включая респавн и "Control Player")
    local function updateCharacter(newCharacter)
        character = newCharacter
        humanoid = newCharacter:WaitForChild('Humanoid', 5)
        if not humanoid then
            return
        end

        -- Проверяем, существует ли GUI, и воссоздаём при необходимости
        if not player.PlayerGui:FindFirstChild('SpeedControl') then
            ScreenGui, controlContainer, dragHandle, controlButton, speedTextBox = createGui()
            controlContainer.Position = savedPosition -- Восстанавливаем сохранённую позицию
            setupGuiEvents() -- Повторно настраиваем события
        end
    end

    player.CharacterAdded:Connect(updateCharacter)
    player.CharacterRemoving:Connect(function()
        if controlContainer then
            savedPosition = controlContainer.Position -- Сохраняем позицию перед удалением
        end
    end)

    -- Подключение функции applyVelocity
    velocityConnection = RunService.RenderStepped:Connect(function()
        if character and humanoid and humanoid.Parent then
            applyVelocity()
        end
    end)

    -- Функция очистки
    return function()
        if velocityConnection then
            velocityConnection:Disconnect()
        end
        if ScreenGui then
            ScreenGui:Destroy()
        end
    end
end
