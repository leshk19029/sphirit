local Players = game:GetService('Players')
local TweenService = game:GetService('TweenService')
local UserInputService = game:GetService('UserInputService')
local RunService = game:GetService('RunService')

return function()
    local player = Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild('Humanoid')

    -- Создаем основной GUI
    local ScreenGui = Instance.new('ScreenGui')
    ScreenGui.Name = 'SpeedControl'
    ScreenGui.Parent = player.PlayerGui
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    -- Основной контейнер
    local mainContainer = Instance.new('Frame')
    mainContainer.Size = UDim2.new(0, 200, 0, 60)
    mainContainer.Position = UDim2.new(0, 10, 0, 10)
    mainContainer.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    mainContainer.BorderSizePixel = 0
    mainContainer.Parent = ScreenGui

    local mainContainerCorner = Instance.new('UICorner')
    mainContainerCorner.CornerRadius = UDim.new(0, 6)
    mainContainerCorner.Parent = mainContainer

    local mainContainerStroke = Instance.new('UIStroke')
    mainContainerStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    mainContainerStroke.Color = Color3.fromRGB(50, 50, 50)
    mainContainerStroke.Thickness = 2
    mainContainerStroke.LineJoinMode = Enum.LineJoinMode.Round
    mainContainerStroke.Parent = mainContainer

    -- Полоска для перемещения
    local dragBar = Instance.new('TextButton')
    dragBar.Size = UDim2.new(1, 0, 0, 20)
    dragBar.Position = UDim2.new(0, 0, 0, 0)
    dragBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    dragBar.BorderSizePixel = 0
    dragBar.Text = ""
    dragBar.Parent = mainContainer

    local dragBarCorner = Instance.new('UICorner')
    dragBarCorner.CornerRadius = UDim.new(0, 6)
    dragBarCorner.Parent = dragBar

    -- Точки на полоске для визуального обозначения
    for i = 1, 3 do
        local dot = Instance.new('Frame')
        dot.Size = UDim2.new(0, 4, 0, 2)
        dot.Position = UDim2.new(0.2 * i, 0, 0.5, -1)
        dot.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
        dot.BorderSizePixel = 0
        dot.Parent = dragBar
        
        local dotCorner = Instance.new('UICorner')
        dotCorner.CornerRadius = UDim.new(1, 0)
        dotCorner.Parent = dot
    end

    -- Контейнер для элементов управления
    local controlsContainer = Instance.new('Frame')
    controlsContainer.Size = UDim2.new(1, -10, 0, 40)
    controlsContainer.Position = UDim2.new(0, 5, 0, 25)
    controlsContainer.BackgroundTransparency = 1
    controlsContainer.Parent = mainContainer

    -- Основная кнопка
    local controlButton = Instance.new('TextButton')
    controlButton.Size = UDim2.new(0, 120, 1, 0)
    controlButton.Position = UDim2.new(0, 0, 0, 0)
    controlButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    controlButton.BorderSizePixel = 0
    controlButton.Text = 'SPEED: OFF'
    controlButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    controlButton.Font = Enum.Font.Code
    controlButton.TextSize = 14
    controlButton.Parent = controlsContainer

    local controlButtonCorner = Instance.new('UICorner')
    controlButtonCorner.CornerRadius = UDim.new(0, 4)
    controlButtonCorner.Parent = controlButton

    local controlButtonStroke = Instance.new('UIStroke')
    controlButtonStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    controlButtonStroke.Color = Color3.fromRGB(50, 50, 50)
    controlButtonStroke.Thickness = 1
    controlButtonStroke.LineJoinMode = Enum.LineJoinMode.Round
    controlButtonStroke.Parent = controlButton

    -- Текстовое поле для ввода скорости
    local speedTextBox = Instance.new('TextBox')
    speedTextBox.Size = UDim2.new(0, 50, 1, 0)
    speedTextBox.Position = UDim2.new(0, 125, 0, 0)
    speedTextBox.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    speedTextBox.BorderSizePixel = 0
    speedTextBox.Text = '25'
    speedTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    speedTextBox.Font = Enum.Font.Code
    speedTextBox.TextSize = 14
    speedTextBox.PlaceholderText = 'Speed'
    speedTextBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
    speedTextBox.TextXAlignment = Enum.TextXAlignment.Center
    speedTextBox.Parent = controlsContainer

    local speedTextBoxCorner = Instance.new('UICorner')
    speedTextBoxCorner.CornerRadius = UDim.new(0, 4)
    speedTextBoxCorner.Parent = speedTextBox

    local speedTextBoxStroke = Instance.new('UIStroke')
    speedTextBoxStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    speedTextBoxStroke.Color = Color3.fromRGB(50, 50, 50)
    speedTextBoxStroke.Thickness = 1
    speedTextBoxStroke.LineJoinMode = Enum.LineJoinMode.Round
    speedTextBoxStroke.Parent = speedTextBox

    -- Переменные состояния
    local speedEnabled = false
    local currentSpeed = 25
    local dragInput, dragStart, startPos

    -- Функция для применения скорости
    local function applyVelocity()
        if speedEnabled and character and humanoid then
            local rootPart = character:FindFirstChild('HumanoidRootPart')
            if rootPart then
                local moveDirection = humanoid.MoveDirection
                if moveDirection.Magnitude > 0 then
                    local velocity = moveDirection * currentSpeed
                    rootPart.Velocity = Vector3.new(velocity.X, rootPart.Velocity.Y, velocity.Z)
                end
            end
        end
    end

    -- Функция для обновления скорости из текстового поля
    local function updateSpeedFromTextBox()
        local text = speedTextBox.Text
        if text and text ~= "" then
            local newSpeed = tonumber(text)
            if newSpeed then
                if newSpeed > 45 then
                    currentSpeed = 45
                    speedTextBox.Text = "45"
                elseif newSpeed < 1 then
                    currentSpeed = 1
                    speedTextBox.Text = "1"
                else
                    currentSpeed = newSpeed
                end
            else
                speedTextBox.Text = tostring(currentSpeed)
            end
        end
    end

    -- Функция перетаскивания
    local function updateDrag(input)
        local delta = input.Position - dragStart
        local newX = startPos.X.Offset + delta.X
        local newY = startPos.Y.Offset + delta.Y

        -- Ограничиваем позицию в пределах экрана
        newX = math.clamp(newX, 0, ScreenGui.AbsoluteSize.X - mainContainer.AbsoluteSize.X)
        newY = math.clamp(newY, 0, ScreenGui.AbsoluteSize.Y - mainContainer.AbsoluteSize.Y)

        mainContainer.Position = UDim2.new(0, newX, 0, newY)
    end

    -- Обработчики событий для перетаскивания (только за полоску)
    dragBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragStart = input.Position
            startPos = mainContainer.Position
            
            -- Эффект при захвате
            TweenService:Create(
                dragBar,
                TweenInfo.new(0.1),
                {BackgroundColor3 = Color3.fromRGB(60, 60, 60)}
            ):Play()
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragStart = nil
                    TweenService:Create(
                        dragBar,
                        TweenInfo.new(0.1),
                        {BackgroundColor3 = Color3.fromRGB(40, 40, 40)}
                    ):Play()
                end
            end)
        end
    end)

    dragBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    -- Обработка перемещения мыши
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragStart then
            updateDrag(input)
        end
    end)

    -- Эффекты для полоски перемещения
    dragBar.MouseEnter:Connect(function()
        if not dragStart then
            TweenService:Create(
                dragBar,
                TweenInfo.new(0.2),
                {BackgroundColor3 = Color3.fromRGB(50, 50, 50)}
            ):Play()
        end
    end)

    dragBar.MouseLeave:Connect(function()
        if not dragStart then
            TweenService:Create(
                dragBar,
                TweenInfo.new(0.2),
                {BackgroundColor3 = Color3.fromRGB(40, 40, 40)}
            ):Play()
        end
    end)

    -- Эффекты для основной кнопки
    controlButton.MouseEnter:Connect(function()
        TweenService:Create(
            controlButton,
            TweenInfo.new(0.2),
            {BackgroundColor3 = Color3.fromRGB(35, 35, 35)}
        ):Play()
    end)

    controlButton.MouseLeave:Connect(function()
        TweenService:Create(
            controlButton,
            TweenInfo.new(0.2),
            {BackgroundColor3 = Color3.fromRGB(25, 25, 25)}
        ):Play()
    end)

    -- Переключение скорости
    controlButton.MouseButton1Click:Connect(function()
        speedEnabled = not speedEnabled
        controlButton.Text = speedEnabled and 'SPEED: ON' or 'SPEED: OFF'
        
        -- Визуальная обратная связь
        local targetColor = speedEnabled and Color3.fromRGB(0, 100, 0) or Color3.fromRGB(25, 25, 25)
        TweenService:Create(
            controlButton,
            TweenInfo.new(0.2),
            {BackgroundColor3 = targetColor}
        ):Play()
    end)

    -- Обновление скорости из текстового поля
    speedTextBox.FocusLost:Connect(function(enterPressed)
        updateSpeedFromTextBox()
    end)

    -- Эффекты для текстового поля
    speedTextBox.Focused:Connect(function()
        TweenService:Create(
            speedTextBox,
            TweenInfo.new(0.2),
            {BackgroundColor3 = Color3.fromRGB(45, 45, 45)}
        ):Play()
    end)

    speedTextBox.FocusLost:Connect(function()
        TweenService:Create(
            speedTextBox,
            TweenInfo.new(0.2),
            {BackgroundColor3 = Color3.fromRGB(35, 35, 35)}
        ):Play()
    end)

    -- Применение скорости каждый кадр
    RunService.RenderStepped:Connect(applyVelocity)

    -- Функция очистки
    return function()
        ScreenGui:Destroy()
    end
end
