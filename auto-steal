local Players = game:GetService('Players')
local TweenService = game:GetService('TweenService')
local UserInputService = game:GetService('UserInputService')
local RunService = game:GetService('RunService')

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild('Humanoid')

-- Создаем основной GUI
local ScreenGui = Instance.new('ScreenGui')
ScreenGui.Name = 'SpeedControl'
ScreenGui.Parent = player.PlayerGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Основная кнопка
local controlButton = Instance.new('TextButton')
controlButton.Size = UDim2.new(0, 150, 0, 40)
controlButton.Position = UDim2.new(0, 10, 0, 10)
controlButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
controlButton.BorderSizePixel = 0
controlButton.Text = 'SPEED: OFF'
controlButton.TextColor3 = Color3.fromRGB(255, 255, 255)
controlButton.Font = Enum.Font.Code
controlButton.TextSize = 14
controlButton.Parent = ScreenGui

local controlButtonCorner = Instance.new('UICorner')
controlButtonCorner.CornerRadius = UDim.new(0, 6)
controlButtonCorner.Parent = controlButton

local controlButtonStroke = Instance.new('UIStroke')
controlButtonStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
controlButtonStroke.Color = Color3.fromRGB(50, 50, 50)
controlButtonStroke.Thickness = 2
controlButtonStroke.LineJoinMode = Enum.LineJoinMode.Round
controlButtonStroke.Parent = controlButton

-- Переменные состояния
local speedEnabled = false
local currentSpeed = 25
local dragInput, dragStart, startPos

-- Функция для применения скорости
local function applyVelocity()
    if speedEnabled and character and humanoid then
        local rootPart = character:FindFirstChild('HumanoidRootPart')
        if rootPart then
            local moveDirection = humanoid.MoveDirection
            if moveDirection.Magnitude > 0 then
                local velocity = moveDirection * currentSpeed
                rootPart.Velocity = Vector3.new(velocity.X, rootPart.Velocity.Y, velocity.Z)
            end
        end
    end
end

-- Функция перетаскивания
local function updateDrag(input)
    local delta = input.Position - dragStart
    local newX = startPos.X.Offset + delta.X
    local newY = startPos.Y.Offset + delta.Y

    newX = math.clamp(newX, 0, ScreenGui.AbsoluteSize.X - controlButton.AbsoluteSize.X)
    newY = math.clamp(newY, 0, ScreenGui.AbsoluteSize.Y - controlButton.AbsoluteSize.Y)

    controlButton.Position = UDim2.new(0, newX, 0, newY)
end

controlButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragStart = input.Position
        startPos = controlButton.Position
    end
end)

controlButton.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragStart then
        updateDrag(input)
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragStart = nil
    end
end)

-- Эффект при наведении на кнопку
controlButton.MouseEnter:Connect(function()
    TweenService:Create(
        controlButton,
        TweenInfo.new(0.2),
        {BackgroundColor3 = Color3.fromRGB(35, 35, 35)}
    ):Play()
end)

controlButton.MouseLeave:Connect(function()
    TweenService:Create(
        controlButton,
        TweenInfo.new(0.2),
        {BackgroundColor3 = Color3.fromRGB(25, 25, 25)}
    ):Play()
end)

-- Обработчик нажатия кнопки
controlButton.MouseButton1Click:Connect(function()
    speedEnabled = not speedEnabled

    if speedEnabled then
        controlButton.Text = 'SPEED: ON (25)'
        controlButton.TextColor3 = Color3.fromRGB(0, 255, 140)
        controlButtonStroke.Color = Color3.fromRGB(0, 200, 100)
    else
        controlButton.Text = 'SPEED: OFF'
        controlButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        controlButtonStroke.Color = Color3.fromRGB(50, 50, 50)
    end
end)

-- Применяем скорость каждый кадр
RunService.RenderStepped:Connect(applyVelocity)
