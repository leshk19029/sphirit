local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local TweenService = game:GetService("TweenService")
local Lighting = game:GetService("Lighting")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")

-- Основной модуль ESP
local ESP = {
    Enabled = true,
    Objects = {},
    Settings = {
        Boxes = true,
        Names = true,
        Tracers = true,
        Health = true,
        Distance = true,
        TeamCheck = false,
        TeamColor = true,
        FillColor = Color3.fromRGB(255, 255, 255),
        FillTransparency = 0.5,
        OutlineColor = Color3.fromRGB(0, 0, 0),
        TextColor = Color3.fromRGB(255, 255, 255),
        TextSize = 14,
        Font = Enum.Font.SourceSansBold,
        MaxDistance = 1000,
        TracerOrigin = "Bottom", -- Bottom, Top, Mouse
        TracerThickness = 1,
        BoxThickness = 1
    }
}

-- Кэшированные переменные
local localPlayer = Players.LocalPlayer
local camera = Workspace.CurrentCamera
local heartbeat = RunService.Heartbeat
local worldToViewportPoint = camera.WorldToViewportPoint

-- Утилиты
local math_floor = math.floor
local math_abs = math.abs
local math_clamp = math.clamp
local string_format = string.format
local task_wait = task.wait
local task_spawn = task.spawn
local table_insert = table.insert
local table_remove = table.remove

-- Цвета для здоровья
local function GetHealthColor(health, maxHealth)
    local percentage = health / maxHealth
    if percentage > 0.5 then
        return Color3.fromRGB(0, 255, 0):Lerp(Color3.fromRGB(255, 255, 0), (1 - percentage) * 2)
    else
        return Color3.fromRGB(255, 255, 0):Lerp(Color3.fromRGB(255, 0, 0), (1 - percentage) * 2)
    end
end

-- Класс ESP объекта
local ESPObject = {}
ESPObject.__index = ESPObject

function ESPObject.new(player, character)
    local self = setmetatable({}, ESPObject)
    
    self.Player = player
    self.Character = character
    self.Humanoid = character:WaitForChild("Humanoid")
    self.HumanoidRootPart = character:WaitForChild("HumanoidRootPart")
    self.Enabled = true
    
    self:CreateObjects()
    self:Update()
    
    return self
end

function ESPObject:CreateObjects()
    -- Box
    self.Box = Drawing.new("Quad")
    self.Box.Visible = false
    self.Box.Filled = ESP.Settings.Boxes
    self.Box.Color = ESP.Settings.FillColor
    self.Box.Transparency = ESP.Settings.FillTransparency
    self.Box.Thickness = ESP.Settings.BoxThickness
    
    -- Outline
    self.Outline = Drawing.new("Quad")
    self.Outline.Visible = false
    self.Outline.Filled = false
    self.Outline.Color = ESP.Settings.OutlineColor
    self.Outline.Thickness = ESP.Settings.BoxThickness + 2
    
    -- Tracer
    self.Tracer = Drawing.new("Line")
    self.Tracer.Visible = false
    self.Tracer.Color = ESP.Settings.TextColor
    self.Tracer.Thickness = ESP.Settings.TracerThickness
    
    -- Name
    self.Name = Drawing.new("Text")
    self.Name.Visible = false
    self.Name.Color = ESP.Settings.TextColor
    self.Name.Size = ESP.Settings.TextSize
    self.Name.Font = ESP.Settings.Font
    self.Name.Outline = true
    self.Name.OutlineColor = ESP.Settings.OutlineColor
    self.Name.Center = true
    
    -- Health
    self.Health = Drawing.new("Text")
    self.Health.Visible = false
    self.Health.Size = ESP.Settings.TextSize
    self.Health.Font = ESP.Settings.Font
    self.Health.Outline = true
    self.Health.OutlineColor = ESP.Settings.OutlineColor
    self.Health.Center = true
    
    -- Distance
    self.Distance = Drawing.new("Text")
    self.Distance.Visible = false
    self.Distance.Color = ESP.Settings.TextColor
    self.Distance.Size = ESP.Settings.TextSize
    self.Distance.Font = ESP.Settings.Font
    self.Distance.Outline = true
    self.Distance.OutlineColor = ESP.Settings.OutlineColor
    self.Distance.Center = true
end

function ESPObject:Update()
    if not self.Enabled or not ESP.Enabled then
        self:Hide()
        return
    end
    
    if not self.Character or not self.Character.Parent or not self.Humanoid or not self.HumanoidRootPart then
        self:Destroy()
        return
    end
    
    local health = self.Humanoid.Health
    local maxHealth = self.Humanoid.MaxHealth
    
    if health <= 0 then
        self:Hide()
        return
    end
    
    -- Team check
    if ESP.Settings.TeamCheck and self.Player.Team == localPlayer.Team then
        self:Hide()
        return
    end
    
    -- Distance check
    local distance = (self.HumanoidRootPart.Position - camera.CFrame.Position).Magnitude
    if distance > ESP.Settings.MaxDistance then
        self:Hide()
        return
    end
    
    -- World to screen
    local position, onScreen = worldToViewportPoint(camera, self.HumanoidRootPart.Position)
    if not onScreen then
        self:Hide()
        return
    end
    
    -- Calculate box size based on distance
    local scale = math_clamp(1000 / distance, 0.5, 2)
    local size = Vector2.new(4 * scale, 6 * scale)
    
    -- Box points
    local topLeft = Vector2.new(position.X - size.X, position.Y - size.Y)
    local topRight = Vector2.new(position.X + size.X, position.Y - size.Y)
    local bottomRight = Vector2.new(position.X + size.X, position.Y + size.Y)
    local bottomLeft = Vector2.new(position.X - size.X, position.Y + size.Y)
    
    -- Update box
    if ESP.Settings.Boxes then
        self.Box.PointA = topLeft
        self.Box.PointB = topRight
        self.Box.PointC = bottomRight
        self.Box.PointD = bottomLeft
        self.Box.Visible = true
        
        self.Outline.PointA = topLeft
        self.Outline.PointB = topRight
        self.Outline.PointC = bottomRight
        self.Outline.PointD = bottomLeft
        self.Outline.Visible = true
        
        -- Team color
        if ESP.Settings.TeamColor then
            self.Box.Color = self.Player.TeamColor.Color
        else
            self.Box.Color = ESP.Settings.FillColor
        end
    else
        self.Box.Visible = false
        self.Outline.Visible = false
    end
    
    -- Update tracer
    if ESP.Settings.Tracers then
        local origin
        if ESP.Settings.TracerOrigin == "Bottom" then
            origin = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y)
        elseif ESP.Settings.TracerOrigin == "Top" then
            origin = Vector2.new(camera.ViewportSize.X / 2, 0)
        else -- Mouse
            local mousePos = UserInputService:GetMouseLocation()
            origin = Vector2.new(mousePos.X, mousePos.Y)
        end
        
        self.Tracer.From = origin
        self.Tracer.To = Vector2.new(position.X, position.Y + size.Y)
        self.Tracer.Visible = true
        self.Tracer.Color = ESP.Settings.TeamColor and self.Player.TeamColor.Color or ESP.Settings.TextColor
    else
        self.Tracer.Visible = false
    end
    
    -- Update name
    if ESP.Settings.Names then
        self.Name.Position = Vector2.new(position.X, position.Y - size.Y - 20)
        self.Name.Text = self.Player.Name
        self.Name.Visible = true
        self.Name.Color = ESP.Settings.TeamColor and self.Player.TeamColor.Color or ESP.Settings.TextColor
    else
        self.Name.Visible = false
    end
    
    -- Update health
    if ESP.Settings.Health then
        self.Health.Position = Vector2.new(position.X, position.Y + size.Y + 5)
        self.Health.Text = string_format("%d/%d", math_floor(health), math_floor(maxHealth))
        self.Health.Color = GetHealthColor(health, maxHealth)
        self.Health.Visible = true
    else
        self.Health.Visible = false
    end
    
    -- Update distance
    if ESP.Settings.Distance then
        self.Distance.Position = Vector2.new(position.X, position.Y + size.Y + 25)
        self.Distance.Text = string_format("%d studs", math_floor(distance))
        self.Distance.Visible = true
        self.Distance.Color = ESP.Settings.TeamColor and self.Player.TeamColor.Color or ESP.Settings.TextColor
    else
        self.Distance.Visible = false
    end
end

function ESPObject:Hide()
    self.Box.Visible = false
    self.Outline.Visible = false
    self.Tracer.Visible = false
    self.Name.Visible = false
    self.Health.Visible = false
    self.Distance.Visible = false
end

function ESPObject:Destroy()
    self:Hide()
    
    if self.Box then self.Box:Remove() end
    if self.Outline then self.Outline:Remove() end
    if self.Tracer then self.Tracer:Remove() end
    if self.Name then self.Name:Remove() end
    if self.Health then self.Health:Remove() end
    if self.Distance then self.Distance:Remove() end
    
    setmetatable(self, nil)
end

-- Основные функции ESP
function ESP:Toggle(state)
    self.Enabled = state
    for _, object in pairs(self.Objects) do
        if state then
            object:Update()
        else
            object:Hide()
        end
    end
end

function ESP:GetPlayerESP(player)
    return self.Objects[player]
end

function ESP:AddPlayer(player)
    if self.Objects[player] then return end
    
    local function characterAdded(character)
        if self.Objects[player] then
            self.Objects[player]:Destroy()
        end
        
        task_wait(1) -- Wait for character to load
        
        if character and character:FindFirstChild("Humanoid") and character:FindFirstChild("HumanoidRootPart") then
            self.Objects[player] = ESPObject.new(player, character)
        end
    end
    
    if player.Character then
        characterAdded(player.Character)
    end
    
    player.CharacterAdded:Connect(characterAdded)
    player.CharacterRemoving:Connect(function()
        if self.Objects[player] then
            self.Objects[player]:Destroy()
            self.Objects[player] = nil
        end
    end)
end

function ESP:RemovePlayer(player)
    if self.Objects[player] then
        self.Objects[player]:Destroy()
        self.Objects[player] = nil
    end
end

function ESP:UpdateAll()
    for _, object in pairs(self.Objects) do
        object:Update()
    end
end

function ESP:ClearAll()
    for player, object in pairs(self.Objects) do
        object:Destroy()
    end
    self.Objects = {}
end

-- Инициализация ESP
function ESP:Initialize()
    self:ClearAll()
    
    -- Добавляем существующих игроков
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer then
            self:AddPlayer(player)
        end
    end
    
    -- Обработка новых игроков
    Players.PlayerAdded:Connect(function(player)
        if player ~= localPlayer then
            self:AddPlayer(player)
        end
    end)
    
    Players.PlayerRemoving:Connect(function(player)
        self:RemovePlayer(player)
    end)
    
    -- Основной цикл обновления
    local connection
    connection = heartbeat:Connect(function()
        if not self.Enabled then return end
        
        camera = Workspace.CurrentCamera
        if not camera then return end
        
        for _, object in pairs(self.Objects) do
            object:Update()
        end
    end)
    
    -- Очистка при выходе
    localPlayer.AncestryChanged:Connect(function()
        if not localPlayer.Parent then
            connection:Disconnect()
            self:ClearAll()
        end
    end)
end

-- Дополнительные функции
function ESP:SetSetting(setting, value)
    if self.Settings[setting] ~= nil then
        self.Settings[setting] = value
        self:UpdateAll()
    end
end

function ESP:GetSettings()
    return self.Settings
end

-- Автоматическая инициализация
task_spawn(function()
    task_wait(2)
    ESP:Initialize()
    ESP:Toggle(true)
end)

-- UI для управления ESP (опционально)
local function CreateESPUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ESPControl"
    screenGui.Parent = CoreGui
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 200, 0, 300)
    frame.Position = UDim2.new(0, 10, 0, 10)
    frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    frame.BorderSizePixel = 0
    frame.Parent = screenGui
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 30)
    title.Text = "ESP Control"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    title.Font = Enum.Font.SourceSansBold
    title.TextSize = 18
    title.Parent = frame
    
    local function CreateToggle(name, setting, yPosition)
        local toggleFrame = Instance.new("Frame")
        toggleFrame.Size = UDim2.new(1, -20, 0, 25)
        toggleFrame.Position = UDim2.new(0, 10, 0, yPosition)
        toggleFrame.BackgroundTransparency = 1
        toggleFrame.Parent = frame
        
        local toggle = Instance.new("TextButton")
        toggle.Size = UDim2.new(0, 20, 0, 20)
        toggle.Position = UDim2.new(0, 0, 0, 0)
        toggle.Text = ""
        toggle.BackgroundColor3 = ESP.Settings[setting] and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        toggle.Parent = toggleFrame
        
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1, -25, 1, 0)
        label.Position = UDim2.new(0, 25, 0, 0)
        label.Text = name
        label.TextColor3 = Color3.fromRGB(255, 255, 255)
        label.BackgroundTransparency = 1
        label.Font = Enum.Font.SourceSans
        label.TextSize = 14
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.Parent = toggleFrame
        
        toggle.MouseButton1Click:Connect(function()
            ESP:SetSetting(setting, not ESP.Settings[setting])
            toggle.BackgroundColor3 = ESP.Settings[setting] and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        end)
        
        return toggleFrame
    end
    
    local yPos = 40
    CreateToggle("Boxes", "Boxes", yPos); yPos = yPos + 30
    CreateToggle("Names", "Names", yPos); yPos = yPos + 30
    CreateToggle("Tracers", "Tracers", yPos); yPos = yPos + 30
    CreateToggle("Health", "Health", yPos); yPos = yPos + 30
    CreateToggle("Distance", "Distance", yPos); yPos = yPos + 30
    CreateToggle("Team Check", "TeamCheck", yPos); yPos = yPos + 30
    CreateToggle("Team Color", "TeamColor", yPos)
    
    -- Кнопка переключения ESP
    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(1, -20, 0, 30)
    toggleButton.Position = UDim2.new(0, 10, 0, 250)
    toggleButton.Text = "ESP: ON"
    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleButton.BackgroundColor3 = Color3.fromRGB(0, 100, 0)
    toggleButton.Font = Enum.Font.SourceSansBold
    toggleButton.TextSize = 16
    toggleButton.Parent = frame
    
    toggleButton.MouseButton1Click:Connect(function()
        ESP:Toggle(not ESP.Enabled)
        toggleButton.Text = ESP.Enabled and "ESP: ON" or "ESP: OFF"
        toggleButton.BackgroundColor3 = ESP.Enabled and Color3.fromRGB(0, 100, 0) or Color3.fromRGB(100, 0, 0)
    end)
end

-- Создаем UI (можно закомментировать если не нужно)
-- CreateESPUI()

return ESP
