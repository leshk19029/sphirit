local Players = game:GetService('Players')
local ReplicatedStorage = game:GetService('ReplicatedStorage')
local RunService = game:GetService('RunService')
local UserInputService = game:GetService('UserInputService')
local TweenService = game:GetService('TweenService')
local GuiService = game:GetService('GuiService')

local module = {}

local controlPlayerEnabled = false
local originalCharacter = nil
local originalCameraSettings = {}
local isControlling = false
local countdownCoroutine = nil
local currentTools = {}
local originalHumanoidState = nil
local webSlingerTool = nil
local controlTime = 10
local screenGui = nil
local controlCircle = nil

-- –°—Ç–∏–ª—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è (—Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –æ—Å–Ω–æ–≤–Ω—ã–º –º–µ–Ω—é)
local MAIN_COLOR = Color3.fromRGB(25, 25, 25)
local ACCENT_COLOR = Color3.fromRGB(44, 120, 224)
local TEXT_COLOR = Color3.fromRGB(255, 255, 255)
local BORDER_COLOR = Color3.fromRGB(50, 50, 50)
local HOVER_COLOR = Color3.fromRGB(35, 35, 35)
local ACTIVE_COLOR = Color3.fromRGB(255, 100, 100)

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–≤–∏–∂–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
local function stopCharacterMovement(character)
    if not character then return end

    local humanoid = character:FindFirstChild('Humanoid')
    local humanoidRootPart = character:FindFirstChild('HumanoidRootPart')
    if not humanoid or not humanoidRootPart then return end

    originalHumanoidState = {
        MoveDirection = humanoid.MoveDirection,
        WalkSpeed = humanoid.WalkSpeed,
    }

    humanoid.WalkSpeed = 0
    humanoid:MoveTo(humanoidRootPart.Position)
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
local function restoreCharacterMovement(character)
    if not character or not originalHumanoidState then return end

    local humanoid = character:FindFirstChild('Humanoid')
    if not humanoid then return end

    humanoid.WalkSpeed = originalHumanoidState.WalkSpeed
    originalHumanoidState = nil
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è WebRopes
local function modifyWebRopes()
    local modifiedCount = 0
    for _, object in ipairs(workspace:GetDescendants()) do
        if object:IsA('RopeConstraint') and object.Name:lower():find('web') then
            object.Length = 950
            modifiedCount = modifiedCount + 1
        end
    end
    return modifiedCount
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–∏—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
local function saveCurrentTools()
    local localPlayer = Players.LocalPlayer
    local character = localPlayer.Character
    if not character then return end

    currentTools = {}
    for _, tool in ipairs(character:GetChildren()) do
        if tool:IsA('Tool') then
            table.insert(currentTools, tool:Clone())
        end
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
local function restoreTools()
    local localPlayer = Players.LocalPlayer
    local character = localPlayer.Character
    if not character then return end

    if webSlingerTool and webSlingerTool.Parent == character then
        webSlingerTool.Parent = localPlayer.Backpack
    end

    for _, tool in ipairs(character:GetChildren()) do
        if tool:IsA('Tool') then
            tool.Parent = localPlayer.Backpack
        end
    end

    for _, tool in ipairs(currentTools) do
        if tool and tool.Parent then
            local newTool = tool:Clone()
            newTool.Parent = character
        end
    end

    currentTools = {}
    webSlingerTool = nil
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∑—è—Ç–∏—è Web Slinger –≤ —Ä—É–∫–∏
local function takeWebSlinger()
    local localPlayer = Players.LocalPlayer
    local character = localPlayer.Character
    local backpack = localPlayer:FindFirstChild('Backpack')
    if not backpack or not character then return false end

    saveCurrentTools()

    for _, tool in ipairs(character:GetChildren()) do
        if tool:IsA('Tool') then
            tool.Parent = backpack
        end
    end

    webSlingerTool = nil
    for _, tool in ipairs(backpack:GetChildren()) do
        if tool:IsA('Tool') and (tool.Name:lower():find('web') or tool.Name:lower():find('slinger') or tool.Name:lower():find('shooter') or tool.Name:lower():find('swing')) then
            webSlingerTool = tool
            break
        end
    end

    if not webSlingerTool then
        restoreTools()
        return false
    end

    webSlingerTool.Parent = character

    local humanoid = character:FindFirstChild('Humanoid')
    if humanoid then
        humanoid:EquipTool(webSlingerTool)
        return true
    end

    return false
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –±–ª–∏–∂–∞–π—à–µ–≥–æ –∏–≥—Ä–æ–∫–∞ –≤ —Ä–∞–¥–∏—É—Å–µ 20 studs
local function findNearestPlayerInRange()
    local localPlayer = Players.LocalPlayer
    local localCharacter = localPlayer.Character
    if not localCharacter then return nil end

    local localRoot = localCharacter:FindFirstChild('HumanoidRootPart')
    if not localRoot then return nil end

    local nearestPlayer = nil
    local shortestDistance = math.huge
    local maxDistance = 20

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character then
            local character = player.Character
            local humanoidRootPart = character:FindFirstChild('HumanoidRootPart')

            if humanoidRootPart then
                local distance = (localRoot.Position - humanoidRootPart.Position).Magnitude
                if distance < shortestDistance and distance <= maxDistance then
                    shortestDistance = distance
                    nearestPlayer = player
                end
            end
        end
    end

    return nearestPlayer
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–∞, –≤ –∫–æ—Ç–æ—Ä–æ–≥–æ –º—ã –≤—ã—Å—Ç—Ä–µ–ª–∏–ª–∏
local function findShotPlayer()
    local localPlayer = Players.LocalPlayer

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character then
            local character = player.Character
            local humanoid = character:FindFirstChild('Humanoid')

            if humanoid and humanoid.PlatformStand then
                return player
            end
        end
    end

    return nil
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è PlatformStand —É —Ü–µ–ª–∏
local function disablePlatformStand(targetPlayer)
    if targetPlayer and targetPlayer.Character then
        local humanoid = targetPlayer.Character:FindFirstChild('Humanoid')
        if humanoid then
            humanoid.PlatformStand = false
        end
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–º–µ–Ω—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
local function swapCharacter(targetPlayer)
    local localPlayer = Players.LocalPlayer

    originalCharacter = localPlayer.Character
    originalCameraSettings = {
        CameraType = workspace.CurrentCamera.CameraType,
        CameraSubject = workspace.CurrentCamera.CameraSubject,
    }

    stopCharacterMovement(originalCharacter)
    disablePlatformStand(targetPlayer)
    localPlayer.Character = targetPlayer.Character

    wait(0.5)

    workspace.CurrentCamera.CameraType = originalCameraSettings.CameraType
    if targetPlayer.Character:FindFirstChild('Humanoid') then
        workspace.CurrentCamera.CameraSubject = targetPlayer.Character.Humanoid
    end

    spawn(function()
        modifyWebRopes()
    end)
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º—É –ø–µ—Ä—Å–æ–Ω–∞–∂—É
local function returnToOriginalCharacter()
    if not originalCharacter then return end

    local localPlayer = Players.LocalPlayer
    localPlayer.Character = originalCharacter
    restoreCharacterMovement(originalCharacter)

    workspace.CurrentCamera.CameraType = originalCameraSettings.CameraType
    if originalCharacter:FindFirstChild('Humanoid') then
        workspace.CurrentCamera.CameraSubject = originalCharacter.Humanoid
    end

    restoreTools()
    originalCharacter = nil
    originalCameraSettings = {}
    isControlling = false
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ç–∞–π–º–µ—Ä–∞
local function stopCountdown()
    if countdownCoroutine then
        coroutine.close(countdownCoroutine)
        countdownCoroutine = nil
    end
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∫–æ–Ω—Ç—Ä–æ–ª—è –∏–≥—Ä–æ–∫–∞
local function controlPlayer()
    if not controlPlayerEnabled then return end
    if isControlling then
        stopCountdown()
        returnToOriginalCharacter()
        if controlCircle then
            controlCircle.Text = "CONTROL"
            controlCircle.TextColor3 = TEXT_COLOR
            controlCircle.BackgroundColor3 = MAIN_COLOR
        end
    else
        if controlCircle then
            controlCircle.Text = "‚è≥"
        end

        if not takeWebSlinger() then
            if controlCircle then
                controlCircle.Text = "‚ùå"
                wait(1)
                controlCircle.Text = "CONTROL"
            end
            return
        end

        if controlCircle then
            controlCircle.Text = "üîç"
        end

        local nearestPlayer = findNearestPlayerInRange()

        if nearestPlayer and nearestPlayer.Character then
            local targetRoot = nearestPlayer.Character:FindFirstChild('HumanoidRootPart')

            if targetRoot then
                if controlCircle then
                    controlCircle.Text = "üéØ"
                end

                local Event = ReplicatedStorage.Packages.Net['RE/UseItem']
                Event:FireServer(Vector3.new(-450.30258178711, -7.0001068115234, 1.8120102882385), targetRoot)

                if controlCircle then
                    controlCircle.Text = "‚ö°"
                end

                wait(1)
                local shotPlayer = findShotPlayer()

                if shotPlayer then
                    swapCharacter(shotPlayer)
                    isControlling = true

                    if controlCircle then
                        controlCircle.Text = tostring(controlTime)
                        controlCircle.TextColor3 = ACTIVE_COLOR
                        controlCircle.BackgroundColor3 = ACTIVE_COLOR
                    end

                    local timer = controlTime
                    countdownCoroutine = coroutine.create(function()
                        while timer > 0 and isControlling do
                            wait(1)
                            timer = timer - 1
                            if controlCircle then
                                controlCircle.Text = tostring(timer)
                            end
                        end

                        if isControlling then
                            returnToOriginalCharacter()
                            if controlCircle then
                                controlCircle.Text = "CONTROL"
                                controlCircle.TextColor3 = TEXT_COLOR
                                controlCircle.BackgroundColor3 = MAIN_COLOR
                            end
                        end
                    end)

                    coroutine.resume(countdownCoroutine)
                else
                    restoreTools()
                    if controlCircle then
                        controlCircle.Text = "‚ùå"
                        wait(1)
                        controlCircle.Text = "CONTROL"
                    end
                end
            else
                restoreTools()
                if controlCircle then
                    controlCircle.Text = "‚ùå"
                    wait(1)
                    controlCircle.Text = "CONTROL"
                end
            end
        else
            restoreTools()
            if controlCircle then
                controlCircle.Text = "‚ùå"
                wait(1)
                controlCircle.Text = "CONTROL"
            end
        end
    end
end

-- –°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä—É–≥–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏
local function createControlCircle()
    local player = Players.LocalPlayer
    
    screenGui = Instance.new('ScreenGui')
    screenGui.Name = 'ControlPlayerCircle'
    screenGui.Parent = player:WaitForChild('PlayerGui')
    screenGui.ResetOnSpawn = false
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.Enabled = controlPlayerEnabled

    -- –û—Å–Ω–æ–≤–Ω–æ–π –∫—Ä—É–≥
    controlCircle = Instance.new('TextButton')
    controlCircle.Name = 'ControlCircle'
    controlCircle.Size = UDim2.new(0, 80, 0, 80)
    controlCircle.Position = UDim2.new(0, 50, 0.8, 0)
    controlCircle.AnchorPoint = Vector2.new(0, 0.5)
    controlCircle.BackgroundColor3 = MAIN_COLOR
    controlCircle.BorderSizePixel = 0
    controlCircle.Text = "CONTROL"
    controlCircle.TextColor3 = TEXT_COLOR
    controlCircle.Font = Enum.Font.Code
    controlCircle.TextSize = 14
    controlCircle.TextScaled = true
    controlCircle.Parent = screenGui

    -- –°–¥–µ–ª–∞–µ–º –∫—Ä—É–≥ –∫—Ä—É–≥–ª—ã–º
    local corner = Instance.new('UICorner')
    corner.CornerRadius = UDim.new(1, 0)
    corner.Parent = controlCircle

    -- –û–±–≤–æ–¥–∫–∞ –≤ —Å—Ç–∏–ª–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
    local stroke = Instance.new('UIStroke')
    stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    stroke.Color = BORDER_COLOR
    stroke.Thickness = 2
    stroke.LineJoinMode = Enum.LineJoinMode.Round
    stroke.Parent = controlCircle

    -- –≠—Ñ—Ñ–µ–∫—Ç—ã –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
    controlCircle.MouseEnter:Connect(function()
        if not isControlling then
            TweenService:Create(controlCircle, TweenInfo.new(0.2), {BackgroundColor3 = HOVER_COLOR}):Play()
        end
    end)

    controlCircle.MouseLeave:Connect(function()
        if not isControlling then
            TweenService:Create(controlCircle, TweenInfo.new(0.2), {BackgroundColor3 = MAIN_COLOR}):Play()
        end
    end)

    -- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
    local dragging = false
    local dragStart, startPos
    local isDragging = false

    -- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏
    local function updatePosition(input)
        if not dragging then return end
        
        local delta
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            delta = input.Position - dragStart
        elseif input.UserInputType == Enum.UserInputType.Touch then
            delta = input.Position - dragStart
        else
            return
        end
        
        -- –ï—Å–ª–∏ –¥–≤–∏–∂–µ–Ω–∏–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–æ–ª—å—à–æ–µ, —Å—á–∏—Ç–∞–µ–º —ç—Ç–æ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ–º
        if delta.Magnitude > 5 then
            isDragging = true
        end
        
        local newX = startPos.X.Offset + delta.X
        local newY = startPos.Y.Offset + delta.Y

        -- –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —ç–∫—Ä–∞–Ω–∞
        newX = math.clamp(newX, 0, screenGui.AbsoluteSize.X - controlCircle.AbsoluteSize.X)
        newY = math.clamp(newY, 0, screenGui.AbsoluteSize.Y - controlCircle.AbsoluteSize.Y)

        controlCircle.Position = UDim2.new(0, newX, 0, newY)
    end

    -- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º—ã—à–∏
    controlCircle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = controlCircle.Position
            isDragging = false
        end
    end)

    controlCircle.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
            -- –ï—Å–ª–∏ –Ω–µ –±—ã–ª–æ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è - —ç—Ç–æ –∫–ª–∏–∫
            if not isDragging then
                controlPlayer()
            end
            isDragging = false
        end
    end)

    -- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ç–∞—á–∞ (–º–æ–±–∏–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞)
    controlCircle.TouchStarted:Connect(function(input)
        dragging = true
        dragStart = input.Position
        startPos = controlCircle.Position
        isDragging = false
    end)

    controlCircle.TouchEnded:Connect(function(input)
        dragging = false
        -- –ï—Å–ª–∏ –Ω–µ –±—ã–ª–æ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è - —ç—Ç–æ —Ç–∞–ø
        if not isDragging then
            controlPlayer()
        end
        isDragging = false
    end)

    -- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–≤–∏–∂–µ–Ω–∏—è –¥–ª—è –º—ã—à–∏ –∏ —Ç–∞—á–∞
    UserInputService.InputChanged:Connect(function(input)
        if (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) and dragging then
            updatePosition(input)
        end
    end)

    -- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏—à–∏ F –¥–ª—è –ü–ö
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed or not controlPlayerEnabled then return end
        if input.KeyCode == Enum.KeyCode.F then
            controlPlayer()
        end
    end)
end

function module.toggleControlPlayer(state)
    controlPlayerEnabled = state
    
    if state then
        if not screenGui then
            createControlCircle()
        else
            screenGui.Enabled = true
        end
    else
        if screenGui then
            screenGui.Enabled = false
        end
        if isControlling then
            returnToOriginalCharacter()
        end
    end
end

-- –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
Players.LocalPlayer.CharacterRemoving:Connect(function()
    if isControlling then
        returnToOriginalCharacter()
    else
        restoreTools()
    end
end)

return module
